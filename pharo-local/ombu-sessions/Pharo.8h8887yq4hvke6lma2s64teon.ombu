OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.941054-03:00' ],		#prior : OmReference [ 'Pharo.4rlczyyrpt7184v7lhmvvr4ow', '11' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #TP1-Tests,		#affectedPackageName : #TP1-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.943827-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasCalendario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1-Tests\''			},			#name : #PruebasCalendario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasCalendario class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasCalendario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasCalendario,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1-Tests,			#package : #TP1-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.948938-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test02AgregarEventoSimple,			#protocol : #test,			#sourceCode : 'test02AgregarEventoSimple\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'TomasBustamante 9/16/2018 20:20',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.951584-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test01AgregarPersonas,			#protocol : #test,			#sourceCode : 'test01AgregarPersonas\r\r    | calendario |\r\t\r    calendario := Calendario new.\r\t\r    self deny: (calendario existePersona: \'Juan\').\r\t\r    calendario agregarPersona: \'Juan\'.\r\t\r    self assert: (calendario existePersona: \'Juan\').\r    self deny: (calendario existePersona: \'Pedro\').',			#stamp : 'TomasBustamante 9/16/2019 19:46',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.954719-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test07PersonaAdmiteSuperposicion,			#protocol : #test,			#sourceCode : 'test07PersonaAdmiteSuperposicion\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoConNombre: \'Visitar oculista\'\r               invitados: \t#(\'Pedro\')\r\t             enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\r    calendario agregarEventoConNombre: \'Leer Las Venas abiertas de America Latina\'\r               invitados: #(\'Pedro\')\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).',			#stamp : 'TomasBustamante 9/16/2019 19:55',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.96012-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test08RecursoNoAdmiteSuperposicion,			#protocol : #test,			#sourceCode : 'test08RecursoNoAdmiteSuperposicion\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'; add: \'Cama\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarRecurso: \'Cama\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 2\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Cama\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r\r    self should: [\r\t      calendario agregarEventoConNombre: \'Gran siesta\'\r\t                 invitados: invitados\r\t                 enAnio: 2019 mes: 5 dia: 11 hora: 10 \r    ] raise: RecursoOcupadoError.',			#stamp : 'TomasBustamante 9/16/2019 19:56',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.966172-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test09RemoverEvento,			#protocol : #test,			#sourceCode : 'test09RemoverEvento\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    \r    calendario removerEvento: \'Siesta\'.\r\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\t\r    calendario agregarEventoSemanalConNombre: \'Gran Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 10 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 10 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 10 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 10 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 25 hora: 10).\r\r    calendario removerEvento: \'Gran Siesta\'.\r\r    " desocupado las cuatro semanas "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 11 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 18 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 25 hora: 10).\r',			#stamp : 'TomasBustamante 9/16/2019 20:11',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.969434-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test06AgregarEventoConRecurso,			#protocol : #test,			#sourceCode : 'test06AgregarEventoConRecurso\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarPersona: \'Pablo\'.\r    calendario agregarRecurso: \'Parrilla\'.\r\r    calendario agregarEventoConNombre: \'Asado vegano\'\r               invitados: #(\'Pedro\' \'Pablo\' \'Parrilla\')\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia:4  hora: 10).\r    self assert: (calendario estaOcupado: \'Pablo\'\r                             enAnio: 2019 mes: 5 dia:4  hora: 10).\r    self assert: (calendario estaOcupado: \'Parrilla\'\r                             enAnio: 2019 mes: 5 dia:4  hora: 10).',			#stamp : 'TomasBustamante 9/16/2018 20:20',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.972539-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test05AgregarRecursos,			#protocol : #test,			#sourceCode : 'test05AgregarRecursos\r\r    | calendario |\r\t\r    calendario := Calendario new.\r\t\r    self deny: (calendario existePersona: \'Pedro\').\r    self deny: (calendario existeRecurso: \'Proyector\').\r\t\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarRecurso: \'Proyector\'.\r\t\r    self assert: (calendario existeRecurso: \'Proyector\').',			#stamp : 'TomasBustamante 9/16/2019 19:52',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.977465-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10).',			#stamp : 'TomasBustamante 9/16/2019 19:51',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:27:07.98084-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test04AgregarEventoSimpleConVariosInvitados,			#protocol : #test,			#sourceCode : 'test04AgregarEventoSimpleConVariosInvitados\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarPersona: \'Pablo\'.\r    calendario agregarPersona: \'Maria\'.\r\r    calendario agregarEventoConNombre: \'Partida de ajedrez\'\r               invitados: #(\'Pedro\' \'Pablo\') " Coleccion de strings "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pablo\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Maria\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 10).',			#stamp : 'TomasBustamante 9/16/2018 20:20',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:28:13.057596-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpCategoryAddition {		#classCategoryName : #TP1-Tests,		#affectedPackageName : #TP1-Tests	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:28:13.097149-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #CalendarioTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1-Tests\''			},			#name : #CalendarioTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CalendarioTest class\r\tinstanceVariableNames: \'\''				},				#name : #'CalendarioTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CalendarioTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1-Tests,			#package : #TP1-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:29:10.914188-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01CalendarioNoDeberiaExistirJuanAlCrearse,			#protocol : #'as yet unclassified',			#sourceCode : 'test01CalendarioNoDeberiaExistirJuanAlCrearse\r',			#stamp : 'andre 9/23/2018 15:29',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:29:10.965708-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01CalendarioNoDeberiaExistirJuanAlCrearse,			#protocol : #'as yet unclassified',			#sourceCode : 'test01CalendarioNoDeberiaExistirJuanAlCrearse\r',			#stamp : 'andre 9/23/2018 15:29',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01CalendarioNoDeberiaExistirJuanAlCrearse,			#protocol : #tests,			#sourceCode : 'test01CalendarioNoDeberiaExistirJuanAlCrearse\r',			#stamp : 'andre 9/23/2018 15:29',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:29:31.289633-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpCategoryAddition {		#classCategoryName : #TP1,		#affectedPackageName : #TP1	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:29:31.319231-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Calendario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Calendario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Calendario class\r\tinstanceVariableNames: \'\''				},				#name : #'Calendario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Calendario,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:29:31.332233-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01CalendarioNoDeberiaExistirJuanAlCrearse,			#protocol : #tests,			#sourceCode : 'test01CalendarioNoDeberiaExistirJuanAlCrearse\r',			#stamp : 'andre 9/23/2018 15:29',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01CalendarioNoDeberiaExistirJuanAlCrearse,			#protocol : #tests,			#sourceCode : 'test01CalendarioNoDeberiaExistirJuanAlCrearse\r    | calendario |\r\t\r    calendario := Calendario new.\r\t\r    self deny: (calendario existePersona: \'Juan\').',			#stamp : 'andre 9/23/2018 15:29',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:30:01.398352-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #'as yet unclassified',			#sourceCode : 'existePersona: nombrePersona\r\t ',			#stamp : 'andre 9/23/2018 15:30',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:30:20.373709-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #'as yet unclassified',			#sourceCode : 'existePersona: nombrePersona\r\t ',			#stamp : 'andre 9/23/2018 15:30',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #'as yet unclassified',			#sourceCode : 'existePersona: nombrePersona\r\t ^false.',			#stamp : 'andre 9/23/2018 15:30',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:33:18.467413-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo,			#protocol : #tests,			#sourceCode : 'test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo\r\t',			#stamp : 'andre 9/23/2018 15:33',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:34:44.583846-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo,			#protocol : #tests,			#sourceCode : 'test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo\r\t',			#stamp : 'andre 9/23/2018 15:33',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo,			#protocol : #tests,			#sourceCode : 'test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo\r\t"Arrange"\r\t| calendario |\r\tcalendario := Calendario new.\r\t\r\t"Act"\r\tcalendario agregarPersona: \'Juan\'.\r\t\r\t"Assert"\r\t',			#stamp : 'andre 9/23/2018 15:34',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:34:57.802741-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo,			#protocol : #tests,			#sourceCode : 'test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo\r\t"Arrange"\r\t| calendario |\r\tcalendario := Calendario new.\r\t\r\t"Act"\r\tcalendario agregarPersona: \'Juan\'.\r\t\r\t"Assert"\r\t',			#stamp : 'andre 9/23/2018 15:34',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo,			#protocol : #tests,			#sourceCode : 'test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo\r\t"Arrange"\r\t| calendario |\r\tcalendario := Calendario new.\r\t\r\t"Act"\r\tcalendario agregarPersona: \'Juan\'.\r\t\r\t"Assert"\r\tself deny: (calendario existePersona: \'Juan\').\r\t',			#stamp : 'andre 9/23/2018 15:34',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:35:13.598623-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo,			#protocol : #tests,			#sourceCode : 'test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo\r\t"Arrange"\r\t| calendario |\r\tcalendario := Calendario new.\r\t\r\t"Act"\r\tcalendario agregarPersona: \'Juan\'.\r\t\r\t"Assert"\r\tself deny: (calendario existePersona: \'Juan\').\r\t',			#stamp : 'andre 9/23/2018 15:34',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo,			#protocol : #tests,			#sourceCode : 'test02CalendarioDeberiaExistirJuanLuegoDeAgregarlo\r\t"Arrange"\r\t| calendario |\r\tcalendario := Calendario new.\r\t\r\t"Act"\r\tcalendario agregarPersona: \'Juan\'.\r\t\r\t"Assert"\r\tself assert: (calendario existePersona: \'Juan\').\r\t',			#stamp : 'andre 9/23/2018 15:35',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:36:32.648257-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #'as yet unclassified',			#sourceCode : 'existePersona: nombrePersona\r\t ^false.',			#stamp : 'andre 9/23/2018 15:30',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^false.',			#stamp : 'andre 9/23/2018 15:30',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:37:09.562404-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarPersona:',			#protocol : #accessing,			#sourceCode : 'agregarPersona: nombrePersona\r\t',			#stamp : 'andre 9/23/2018 15:37',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:38:13.701219-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^false.',			#stamp : 'andre 9/23/2018 15:30',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^true.',			#stamp : 'andre 9/23/2018 15:38',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:38:45.657402-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^true.',			#stamp : 'andre 9/23/2018 15:38',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^false.',			#stamp : 'andre 9/23/2018 15:38',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:40:03.857829-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^false.',			#stamp : 'andre 9/23/2018 15:38',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^true.',			#stamp : 'andre 9/23/2018 15:40',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:40:32.248501-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^true.',			#stamp : 'andre 9/23/2018 15:40',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^false.',			#stamp : 'andre 9/23/2018 15:40',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:40:47.55929-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^false.',			#stamp : 'andre 9/23/2018 15:40',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^true.',			#stamp : 'andre 9/23/2018 15:40',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:43:52.692332-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Calendario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Calendario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Calendario class\r\tinstanceVariableNames: \'\''				},				#name : #'Calendario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Calendario,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Calendario\r\tinstanceVariableNames: \'personas\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Calendario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Calendario,						#isMetaSide : false					},					#name : #personas,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Calendario class\r\tinstanceVariableNames: \'\''				},				#name : #'Calendario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Calendario,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:44:27.745889-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Calendario\r\tinstanceVariableNames: \'personas\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Calendario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Calendario,						#isMetaSide : false					},					#name : #personas,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Calendario class\r\tinstanceVariableNames: \'\''				},				#name : #'Calendario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Calendario,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:45:38.476334-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tpersonas := LinkedList new.',			#stamp : 'andre 9/23/2018 15:45',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T15:46:47.847064-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarPersona:',			#protocol : #accessing,			#sourceCode : 'agregarPersona: nombrePersona\r\t',			#stamp : 'andre 9/23/2018 15:37',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarPersona:',			#protocol : #accessing,			#sourceCode : 'agregarPersona: nombrePersona\r\tpersonas add: nombrePersona.',			#stamp : 'andre 9/23/2018 15:46',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T16:35:10.925721-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ^true.',			#stamp : 'andre 9/23/2018 15:40',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ',			#stamp : 'andre 9/23/2018 16:35',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T16:58:25.555636-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\t ',			#stamp : 'andre 9/23/2018 16:35',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existePersona:',			#protocol : #accessing,			#sourceCode : 'existePersona: nombrePersona\r\r\t| nombrePertenece |\r\t\r\tnombrePertenece := personas includes: nombrePersona.\r\t\r\t^nombrePertenece.',			#stamp : 'andre 9/23/2018 16:58',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.709285-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpCategoryAddition {		#classCategoryName : #MaquinaBebidas-Tests,		#affectedPackageName : #MaquinaBebidas-Tests	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.73714-03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasAzucarero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasAzucarero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasAzucarero class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasAzucarero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasAzucarero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.739145-03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasAzucarero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasAzucarero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasAzucarero class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasAzucarero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasAzucarero,					#isMetaSide : false				},				#parent : @7,				#content : 'Pruebas unitarias de la clase Azucarero.',				#stamp : 'TomasBustamante 3/25/2018 01:05'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Pruebas unitarias de la clase Azucarero.',		#newStamp : 'TomasBustamante 3/25/2018 01:05'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.746612-03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasAzucarero,				#isMetaSide : false			},			#name : #test02AzucareroEndulzaDosEnVasoYAlVolcarloDosVecesDevuelveDosAzucar,			#protocol : #tests,			#sourceCode : 'test02AzucareroEndulzaDosEnVasoYAlVolcarloDosVecesDevuelveDosAzucar\r\t" Arrange "\r\t| azucarero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tazucarero := Azucarero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t2 timesRepeat: [ contenidoEsperado add: \'azucar\' ].\r\t\r\t" Act "\r\tazucarero endulzar: 2 en: vaso.\r\t2 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 23:29',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.749528-03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasAzucarero,				#isMetaSide : false			},			#name : #test06AzucareroEndulzaUnaCantidadNegativaEnVasoVacioYElVasoQuedaVacio,			#protocol : #tests,			#sourceCode : 'test06AzucareroEndulzaUnaCantidadNegativaEnVasoVacioYElVasoQuedaVacio\r\t" Arrange "\r\t| azucarero vaso contenido |\r\tvaso := Vaso new.\r\tazucarero := Azucarero new.\r\t\r\t" Act "\r\tazucarero endulzar: -1 en: vaso.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/23/2018 13:47',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.753892-03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasAzucarero,				#isMetaSide : false			},			#name : #test05AzucareroEndulzaCeroEnVasoVacioYElVasoQuedaVacio,			#protocol : #tests,			#sourceCode : 'test05AzucareroEndulzaCeroEnVasoVacioYElVasoQuedaVacio\r\t" Arrange "\r\t| azucarero vaso contenido |\r\tvaso := Vaso new.\r\tazucarero := Azucarero new.\r\t\r\t" Act "\r\tazucarero endulzar: 0 en: vaso.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/23/2018 12:58',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.75619-03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasAzucarero,				#isMetaSide : false			},			#name : #test04AzucareroEndulzaUnoEnVasoYAlVolcarloElVasoQuedaVacio,			#protocol : #tests,			#sourceCode : 'test04AzucareroEndulzaUnoEnVasoYAlVolcarloElVasoQuedaVacio\r\t" Arrange "\r\t| azucarero vaso contenido |\r\tvaso := Vaso new.\r\tazucarero := Azucarero new.\r\t\r\t" Act "\r\tazucarero endulzar: 1 en: vaso.\r\tvaso volcar.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/22/2018 20:35',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.758405-03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasAzucarero,				#isMetaSide : false			},			#name : #test01AzucareroEndulzaUnoEnVasoYAlVolcarloDevuelveUnAzucar,			#protocol : #tests,			#sourceCode : 'test01AzucareroEndulzaUnoEnVasoYAlVolcarloDevuelveUnAzucar\r\t" Arrange "\r\t| azucarero vaso contenido |\r\tvaso := Vaso new.\r\tazucarero := Azucarero new.\r\t\r\t" Act "\r\tazucarero endulzar: 1 en: vaso.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'azucar\'.',			#stamp : 'TomasBustamante 3/22/2018 20:10',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.761425-03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasAzucarero,				#isMetaSide : false			},			#name : #test03AzucareroEndulzaCienEnVasoYAlVolcarloCienVecesDevuelveCienDeAzucar,			#protocol : #tests,			#sourceCode : 'test03AzucareroEndulzaCienEnVasoYAlVolcarloCienVecesDevuelveCienDeAzucar\r\t" Arrange "\r\t| azucarero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tazucarero := Azucarero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t100 timesRepeat: [ contenidoEsperado add: \'azucar\'. ].\r\t\r\t" Act "\r\tazucarero endulzar: 100 en: vaso.\r\t100 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/23/2018 19:46',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.765615-03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasAzucarero,				#isMetaSide : false			},			#name : #test07AzucareroEndulzaUnoEnVasoQueYaTeniaUnCafeYAlVolcarloDosVecesDevuelveElAzucarYLuegoElCafe,			#protocol : #tests,			#sourceCode : 'test07AzucareroEndulzaUnoEnVasoQueYaTeniaUnCafeYAlVolcarloDosVecesDevuelveElAzucarYLuegoElCafe\r\t" Arrange "\r\t| azucarero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tazucarero := Azucarero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'azucar\'.\r\tcontenidoEsperado add: \'cafe\'.\r\t\r\t" Act "\r\tvaso agregar: \'cafe\'.\r\tazucarero endulzar: 1 en: vaso.\r\t2 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:48',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.771345-03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasCafetero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasCafetero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasCafetero class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasCafetero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasCafetero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.772755-03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasCafetero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasCafetero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasCafetero class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasCafetero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasCafetero,					#isMetaSide : false				},				#parent : @7,				#content : 'Pruebas unitarias de la clase Cafetero.',				#stamp : 'TomasBustamante 3/25/2018 01:05'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Pruebas unitarias de la clase Cafetero.',		#newStamp : 'TomasBustamante 3/25/2018 01:05'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.775267-03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCafetero,				#isMetaSide : false			},			#name : #test04CafeteroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio,			#protocol : #tests,			#sourceCode : 'test04CafeteroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio\r\t" Arrange "\r\t| cafetero vaso contenido |\r\tvaso := Vaso new.\r\tcafetero := Cafetero new.\r\t\r\t" Act "\r\tcafetero prepararUnoEn: vaso.\r\tvaso volcar. " cafe "\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/24/2018 12:49',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.777976-03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCafetero,				#isMetaSide : false			},			#name : #test05CafeteroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveElCafeYLuegoElAzucar,			#protocol : #tests,			#sourceCode : 'test05CafeteroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveElCafeYLuegoElAzucar\r\t" Arrange "\r\t| cafetero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tcafetero := Cafetero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'cafe\'.\r\tcontenidoEsperado add: \'azucar\'.\r\t\r\t" Act "\r\tvaso agregar: \'azucar\'.\r\tcafetero prepararUnoEn: vaso.\r\t2 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:48',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.780955-03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCafetero,				#isMetaSide : false			},			#name : #test03CafeteroPreparaCienCafesEnVasoYAlVolcarloCienVecesDevuelveCienCafes,			#protocol : #tests,			#sourceCode : 'test03CafeteroPreparaCienCafesEnVasoYAlVolcarloCienVecesDevuelveCienCafes\r\t" Arrange "\r\t| cafetero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tcafetero := Cafetero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t100 timesRepeat: [ contenidoEsperado add: \'cafe\'. ].\r\t\r\t" Act "\r\t100 timesRepeat: [ cafetero prepararUnoEn: vaso ].\r\t100 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/23/2018 19:46',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.785374-03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCafetero,				#isMetaSide : false			},			#name : #test02CafeteroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosCafe,			#protocol : #tests,			#sourceCode : 'test02CafeteroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosCafe\r\t" Arrange "\r\t| cafetero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tcafetero := Cafetero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'cafe\'.\r\tcontenidoEsperado add: \'cafe\'.\r\t\r\t" Act "\r\t2 timesRepeat: [ cafetero prepararUnoEn: vaso. ].\r\t2 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:49',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.787763-03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCafetero,				#isMetaSide : false			},			#name : #test01CafeteroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnCafe,			#protocol : #tests,			#sourceCode : 'test01CafeteroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnCafe \r\t" Arrange "\r\t| cafetero vaso contenido |\r\tvaso := Vaso new.\r\tcafetero := Cafetero new.\r\t\r\t" Act "\r\tcafetero prepararUnoEn: vaso.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'cafe\'.',			#stamp : 'TomasBustamante 3/23/2018 18:52',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.793872-03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasHacedorDeCafeConLeche\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasHacedorDeCafeConLeche,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasHacedorDeCafeConLeche class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasHacedorDeCafeConLeche class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasHacedorDeCafeConLeche,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.795322-03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasHacedorDeCafeConLeche\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasHacedorDeCafeConLeche,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasHacedorDeCafeConLeche class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasHacedorDeCafeConLeche class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasHacedorDeCafeConLeche,					#isMetaSide : false				},				#parent : @7,				#content : 'Pruebas unitarias de la clase HacedorDeCafeConLeche.',				#stamp : 'TomasBustamante 3/25/2018 01:05'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Pruebas unitarias de la clase HacedorDeCafeConLeche.',		#newStamp : 'TomasBustamante 3/25/2018 01:05'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.800402-03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeCafeConLeche,				#isMetaSide : false			},			#name : #test04HacedorDeCafeConLechePreparaDosEnVaso,			#protocol : #tests,			#sourceCode : 'test04HacedorDeCafeConLechePreparaDosEnVaso\r\t" Arrange "\r\t| hacedorDeCafeConLeche vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\thacedorDeCafeConLeche := HacedorDeCafeConLeche new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t2 timesRepeat: [ \r\t\tcontenidoEsperado add: \'leche\'.\r\t\tcontenidoEsperado add: \'cafe\' ].\r\t\r\t" Act "\r\t2 timesRepeat: [ hacedorDeCafeConLeche prepararUnoEn: vaso ].\r\t4 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:28',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.802969-03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeCafeConLeche,				#isMetaSide : false			},			#name : #test01HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloUnaVezDevuelveLeche,			#protocol : #tests,			#sourceCode : 'test01HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloUnaVezDevuelveLeche\r\t" Arrange "\r\t| hacedorDeCafeConLeche vaso contenido |\r\tvaso := Vaso new.\r\thacedorDeCafeConLeche := HacedorDeCafeConLeche new.\r\t\r\t" Act "\r\thacedorDeCafeConLeche prepararUnoEn: vaso.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'leche\'.',			#stamp : 'TomasBustamante 3/24/2018 12:04',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.805662-03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeCafeConLeche,				#isMetaSide : false			},			#name : #test02HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloLaSegundaVezDevuelveCafe,			#protocol : #tests,			#sourceCode : 'test02HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloLaSegundaVezDevuelveCafe\r\t" Arrange "\r\t| hacedorDeCafeConLeche vaso contenido |\r\tvaso := Vaso new.\r\thacedorDeCafeConLeche := HacedorDeCafeConLeche new.\r\t\r\t" Act "\r\thacedorDeCafeConLeche prepararUnoEn: vaso.\r\tvaso volcar. " Aqui no necesito guardarme el ingrediente volcado "\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'cafe\'.',			#stamp : 'TomasBustamante 3/24/2018 12:25',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.808232-03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeCafeConLeche,				#isMetaSide : false			},			#name : #test03HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloLaTerceraVezDevuelveVacio,			#protocol : #tests,			#sourceCode : 'test03HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloLaTerceraVezDevuelveVacio\r\t" Arrange "\r\t| hacedorDeCafeConLeche vaso contenido |\r\tvaso := Vaso new.\r\thacedorDeCafeConLeche := HacedorDeCafeConLeche new.\r\t\r\t" Act "\r\thacedorDeCafeConLeche prepararUnoEn: vaso.\r\tvaso volcar. " leche "\r\tvaso volcar. " cafe "\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/24/2018 12:36',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.812292-03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeCafeConLeche,				#isMetaSide : false			},			#name : #test05HacedorDeCafeConLechePreparaUnoEnVasoQueYaTeniaUnAzucar,			#protocol : #tests,			#sourceCode : 'test05HacedorDeCafeConLechePreparaUnoEnVasoQueYaTeniaUnAzucar\r\t" Arrange "\r\t| hacedorDeCafeConLeche vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\thacedorDeCafeConLeche := HacedorDeCafeConLeche new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'cafe\'.\r\tcontenidoEsperado add: \'azucar\'.\r\t\r\t" Act "\r\tvaso agregar: \'azucar\'.\r\thacedorDeCafeConLeche prepararUnoEn: vaso.\r\t3 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:38',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.817627-03:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasHacedorDeTeConLeche\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasHacedorDeTeConLeche,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasHacedorDeTeConLeche class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasHacedorDeTeConLeche class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasHacedorDeTeConLeche,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.81872-03:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasHacedorDeTeConLeche\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasHacedorDeTeConLeche,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasHacedorDeTeConLeche class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasHacedorDeTeConLeche class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasHacedorDeTeConLeche,					#isMetaSide : false				},				#parent : @7,				#content : 'Pruebas unitarias de la clase HacedorDeTeConLeche.',				#stamp : 'TomasBustamante 3/25/2018 01:05'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Pruebas unitarias de la clase HacedorDeTeConLeche.',		#newStamp : 'TomasBustamante 3/25/2018 01:05'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.822037-03:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeTeConLeche,				#isMetaSide : false			},			#name : #test03HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloLaTerceraVezDevuelveVacio,			#protocol : #tests,			#sourceCode : 'test03HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloLaTerceraVezDevuelveVacio\r\t" Arrange "\r\t| hacedorDeTeConLeche vaso contenido |\r\tvaso := Vaso new.\r\thacedorDeTeConLeche := HacedorDeTeConLeche new.\r\t\r\t" Act "\r\thacedorDeTeConLeche prepararUnoEn: vaso.\r\tvaso volcar. " leche "\r\tvaso volcar. " te "\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/24/2018 12:56',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.825047-03:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeTeConLeche,				#isMetaSide : false			},			#name : #test04HacedorDeTeConLechePreparaDosEnVaso,			#protocol : #tests,			#sourceCode : 'test04HacedorDeTeConLechePreparaDosEnVaso\r\t" Arrange "\r\t| hacedorDeTeConLeche vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\thacedorDeTeConLeche := HacedorDeTeConLeche new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t2 timesRepeat: [ \r\t\tcontenidoEsperado add: \'leche\'.\r\t\tcontenidoEsperado add: \'te\' ].\r\t\r\t" Act "\r\t2 timesRepeat: [ hacedorDeTeConLeche prepararUnoEn: vaso ].\r\t4 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:56',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.829137-03:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeTeConLeche,				#isMetaSide : false			},			#name : #test01HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloUnaVezDevuelveLeche,			#protocol : #tests,			#sourceCode : 'test01HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloUnaVezDevuelveLeche\r\t" Arrange "\r\t| hacedorDeTeConLeche vaso contenido |\r\tvaso := Vaso new.\r\thacedorDeTeConLeche := HacedorDeTeConLeche new.\r\t\r\t" Act "\r\thacedorDeTeConLeche prepararUnoEn: vaso.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'leche\'.',			#stamp : 'TomasBustamante 3/24/2018 12:53',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.831814-03:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeTeConLeche,				#isMetaSide : false			},			#name : #test02HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloLaSegundaVezDevuelveTe,			#protocol : #tests,			#sourceCode : 'test02HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloLaSegundaVezDevuelveTe\r\t" Arrange "\r\t| hacedorDeTeConLeche vaso contenido |\r\tvaso := Vaso new.\r\thacedorDeTeConLeche := HacedorDeTeConLeche new.\r\t\r\t" Act "\r\thacedorDeTeConLeche prepararUnoEn: vaso.\r\tvaso volcar. " Aqui no necesito guardarme el ingrediente volcado "\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'te\'.',			#stamp : 'TomasBustamante 3/24/2018 12:56',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.834922-03:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasHacedorDeTeConLeche,				#isMetaSide : false			},			#name : #test05HacedorDeTeConLechePreparaUnoEnVasoQueYaTeniaUnAzucar,			#protocol : #tests,			#sourceCode : 'test05HacedorDeTeConLechePreparaUnoEnVasoQueYaTeniaUnAzucar\r\t" Arrange "\r\t| hacedorDeTeConLeche vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\thacedorDeTeConLeche := HacedorDeTeConLeche new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'te\'.\r\tcontenidoEsperado add: \'azucar\'.\r\t\r\t" Act "\r\tvaso agregar: \'azucar\'.\r\thacedorDeTeConLeche prepararUnoEn: vaso.\r\t3 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:57',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.841533-03:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasLechero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasLechero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasLechero class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasLechero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasLechero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.843011-03:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasLechero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasLechero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasLechero class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasLechero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasLechero,					#isMetaSide : false				},				#parent : @7,				#content : 'Pruebas unitarias de la clase Lechero.',				#stamp : 'TomasBustamante 3/25/2018 01:05'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Pruebas unitarias de la clase Lechero.',		#newStamp : 'TomasBustamante 3/25/2018 01:05'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.847633-03:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasLechero,				#isMetaSide : false			},			#name : #test03LecheroPreparaCienLechesEnVasoYAlVolcarloCienVecesDevuelveCienLeches,			#protocol : #tests,			#sourceCode : 'test03LecheroPreparaCienLechesEnVasoYAlVolcarloCienVecesDevuelveCienLeches\r\t" Arrange "\r\t| lechero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tlechero := Lechero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t100 timesRepeat: [ contenidoEsperado add: \'leche\'. ].\r\t\r\t" Act "\r\t100 timesRepeat: [ lechero prepararUnoEn: vaso ].\r\t100 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 00:38',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.85099-03:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasLechero,				#isMetaSide : false			},			#name : #test05LecheroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveLaLecheYLuegoElAzucar,			#protocol : #tests,			#sourceCode : 'test05LecheroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveLaLecheYLuegoElAzucar\r\t" Arrange "\r\t| lechero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tlechero := Lechero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'azucar\'.\r\t\r\t" Act "\r\tvaso agregar: \'azucar\'.\r\tlechero prepararUnoEn: vaso.\r\t2 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:49',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.855766-03:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasLechero,				#isMetaSide : false			},			#name : #test02LecheroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosLeches,			#protocol : #tests,			#sourceCode : 'test02LecheroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosLeches\r\t" Arrange "\r\t| lechero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tlechero := Lechero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'leche\'.\r\t\r\t" Act "\r\t2 timesRepeat: [ lechero prepararUnoEn: vaso ].\r\t2 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:50',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.858613-03:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasLechero,				#isMetaSide : false			},			#name : #test04LecheroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio,			#protocol : #tests,			#sourceCode : 'test04LecheroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio\r\t" Arrange "\r\t| lechero vaso contenido |\r\tvaso := Vaso new.\r\tlechero := Lechero new.\r\t\r\t" Act "\r\tlechero prepararUnoEn: vaso.\r\tvaso volcar. " leche "\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/24/2018 12:50',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.861788-03:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasLechero,				#isMetaSide : false			},			#name : #test01LecheroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnaLeche,			#protocol : #tests,			#sourceCode : 'test01LecheroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnaLeche\r\t" Arrange "\r\t| lechero vaso contenido |\r\tvaso := Vaso new.\r\tlechero := Lechero new.\r\t\r\t" Act "\r\tlechero prepararUnoEn: vaso.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'leche\'.',			#stamp : 'TomasBustamante 3/24/2018 00:31',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.866872-03:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasMaquinaBebidas\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasMaquinaBebidas,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasMaquinaBebidas class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasMaquinaBebidas class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasMaquinaBebidas,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.86963-03:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasMaquinaBebidas\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasMaquinaBebidas,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasMaquinaBebidas class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasMaquinaBebidas class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasMaquinaBebidas,					#isMetaSide : false				},				#parent : @7,				#content : 'Pruebas unitarias y de integración de la clase MaquinaBebidas.',				#stamp : 'TomasBustamante 3/24/2018 23:50'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Pruebas unitarias y de integración de la clase MaquinaBebidas.',		#newStamp : 'TomasBustamante 3/24/2018 23:50'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.873704-03:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasMaquinaBebidas,				#isMetaSide : false			},			#name : #test07PrepararTeConLecheConDosDeAzucar,			#protocol : #testsTeConLeche,			#sourceCode : 'test07PrepararTeConLecheConDosDeAzucar\r\t" Arrange "\r\t| vaso maquina contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tmaquina := MaquinaBebidas new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t2 timesRepeat: [ contenidoEsperado add: \'azucar\' ].\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'te\'.\r\tcontenidoEsperado add: \'vacio\'.\r\t\r\t" Act "\r\tmaquina hacerTeConLecheEn: vaso conCantidadDeAzucar: 2.\r\t5 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.\r\t',			#stamp : 'TomasBustamante 3/25/2018 01:11',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.876865-03:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasMaquinaBebidas,				#isMetaSide : false			},			#name : #test05PrepararTeConLecheSinAzucar,			#protocol : #testsTeConLeche,			#sourceCode : 'test05PrepararTeConLecheSinAzucar\r\t" Arrange "\r\t| vaso maquina contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tmaquina := MaquinaBebidas new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'te\'.\r\tcontenidoEsperado add: \'vacio\'.\r\t\r\t" Act "\r\tmaquina hacerTeConLecheEn: vaso conCantidadDeAzucar: 0.\r\t3 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.\r\t',			#stamp : 'TomasBustamante 3/25/2018 01:10',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.881785-03:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasMaquinaBebidas,				#isMetaSide : false			},			#name : #test06PrepararTeConLecheConUnAzucar,			#protocol : #testsTeConLeche,			#sourceCode : 'test06PrepararTeConLecheConUnAzucar\r\t" Arrange "\r\t| vaso maquina contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tmaquina := MaquinaBebidas new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'azucar\'.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'te\'.\r\tcontenidoEsperado add: \'vacio\'.\r\t\r\t" Act "\r\tmaquina hacerTeConLecheEn: vaso conCantidadDeAzucar: 1.\r\t4 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.\r\t',			#stamp : 'TomasBustamante 3/25/2018 01:11',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.885523-03:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasMaquinaBebidas,				#isMetaSide : false			},			#name : #test08PrepararTeConLecheConAzucarNegativaNoPoneAzucar,			#protocol : #testsTeConLeche,			#sourceCode : 'test08PrepararTeConLecheConAzucarNegativaNoPoneAzucar\r\t" Arrange "\r\t| vaso maquina contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tmaquina := MaquinaBebidas new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'te\'.\r\tcontenidoEsperado add: \'vacio\'.\r\t\r\t" Act "\r\tmaquina hacerTeConLecheEn: vaso conCantidadDeAzucar: -1.\r\t3 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.\r\t',			#stamp : 'TomasBustamante 3/25/2018 01:11',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.889042-03:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasMaquinaBebidas,				#isMetaSide : false			},			#name : #test04PrepararCafeConLecheConAzucarNegativaNoPoneAzucar,			#protocol : #testsCafeConLeche,			#sourceCode : 'test04PrepararCafeConLecheConAzucarNegativaNoPoneAzucar\r\t" Arrange "\r\t| vaso maquina contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tmaquina := MaquinaBebidas new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'cafe\'.\r\tcontenidoEsperado add: \'vacio\'.\r\t\r\t" Act "\r\tmaquina hacerCafeConLecheEn: vaso conCantidadDeAzucar: -1.\r\t3 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.\r\t',			#stamp : 'TomasBustamante 3/24/2018 23:35',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.893309-03:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasMaquinaBebidas,				#isMetaSide : false			},			#name : #test03PrepararCafeConLecheConDosDeAzucar,			#protocol : #testsCafeConLeche,			#sourceCode : 'test03PrepararCafeConLecheConDosDeAzucar\r\t" Arrange "\r\t| vaso maquina contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tmaquina := MaquinaBebidas new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t2 timesRepeat: [ contenidoEsperado add: \'azucar\' ].\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'cafe\'.\r\tcontenidoEsperado add: \'vacio\'.\r\t\r\t" Act "\r\tmaquina hacerCafeConLecheEn: vaso conCantidadDeAzucar: 2.\r\t5 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.\r\t',			#stamp : 'TomasBustamante 3/24/2018 23:35',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.897335-03:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasMaquinaBebidas,				#isMetaSide : false			},			#name : #test02PrepararCafeConLecheConUnAzucar,			#protocol : #testsCafeConLeche,			#sourceCode : 'test02PrepararCafeConLecheConUnAzucar\r\t" Arrange "\r\t| vaso maquina contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tmaquina := MaquinaBebidas new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'azucar\'.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'cafe\'.\r\tcontenidoEsperado add: \'vacio\'.\r\t\r\t" Act "\r\tmaquina hacerCafeConLecheEn: vaso conCantidadDeAzucar: 1.\r\t4 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.\r\t',			#stamp : 'TomasBustamante 3/24/2018 23:36',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.901586-03:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasMaquinaBebidas,				#isMetaSide : false			},			#name : #test01PrepararCafeConLecheSinAzucar,			#protocol : #testsCafeConLeche,			#sourceCode : 'test01PrepararCafeConLecheSinAzucar\r\t" Arrange "\r\t| vaso maquina contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tmaquina := MaquinaBebidas new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'leche\'.\r\tcontenidoEsperado add: \'cafe\'.\r\tcontenidoEsperado add: \'vacio\'.\r\t\r\t" Act "\r\tmaquina hacerCafeConLecheEn: vaso conCantidadDeAzucar: 0.\r\t3 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.\r\t',			#stamp : 'TomasBustamante 3/24/2018 23:36',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.906621-03:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasTetero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasTetero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasTetero class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasTetero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasTetero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.907691-03:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasTetero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasTetero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasTetero class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasTetero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasTetero,					#isMetaSide : false				},				#parent : @7,				#content : 'Pruebas unitarias de la clase Tetero.',				#stamp : 'TomasBustamante 3/25/2018 01:05'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Pruebas unitarias de la clase Tetero.',		#newStamp : 'TomasBustamante 3/25/2018 01:05'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.911989-03:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasTetero,				#isMetaSide : false			},			#name : #test02TeteroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosTe,			#protocol : #tests,			#sourceCode : 'test02TeteroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosTe\r\t" Arrange "\r\t| tetero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\ttetero := Tetero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t2 timesRepeat: [ contenidoEsperado add: \'te\' ].\r\t\r\t" Act "\r\t2 timesRepeat: [ tetero prepararUnoEn: vaso ].\r\t2 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:52',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.916276-03:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasTetero,				#isMetaSide : false			},			#name : #test04TeteroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio,			#protocol : #tests,			#sourceCode : 'test04TeteroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio\r\t" Arrange "\r\t| tetero vaso contenido |\r\tvaso := Vaso new.\r\ttetero := Tetero new.\r\t\r\t" Act "\r\ttetero prepararUnoEn: vaso.\r\tvaso volcar.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/23/2018 19:55',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.919611-03:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasTetero,				#isMetaSide : false			},			#name : #test03TeteroPreparaCienTesEnVasoYAlVolcarloCienVecesDevuelveCienTes,			#protocol : #tests,			#sourceCode : 'test03TeteroPreparaCienTesEnVasoYAlVolcarloCienVecesDevuelveCienTes\r\t" Arrange "\r\t| tetero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\ttetero := Tetero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\t100 timesRepeat: [ contenidoEsperado add: \'te\'. ].\r\t\r\t" Act "\r\t100 timesRepeat: [ tetero prepararUnoEn: vaso ].\r\t100 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 00:38',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.924112-03:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasTetero,				#isMetaSide : false			},			#name : #test05TeteroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveElTeYLuegoElAzucar,			#protocol : #tests,			#sourceCode : 'test05TeteroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveElTeYLuegoElAzucar\r\t" Arrange "\r\t| tetero vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\ttetero := Tetero new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'te\'.\r\tcontenidoEsperado add: \'azucar\'.\r\t\r\t" Act "\r\tvaso agregar: \'azucar\'.\r\ttetero prepararUnoEn: vaso.\r\t2 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:50',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.927781-03:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasTetero,				#isMetaSide : false			},			#name : #test01TeteroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnTe,			#protocol : #tests,			#sourceCode : 'test01TeteroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnTe \r\t" Arrange "\r\t| tetero vaso contenido |\r\tvaso := Vaso new.\r\ttetero := Tetero new.\r\t\r\t" Act "\r\ttetero prepararUnoEn: vaso.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'te\'.',			#stamp : 'TomasBustamante 3/23/2018 19:56',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.933844-03:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasVaso\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasVaso,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasVaso class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasVaso class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasVaso,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.935946-03:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasVaso\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas-Tests\''			},			#name : #PruebasVaso,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasVaso class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasVaso class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasVaso,					#isMetaSide : false				},				#parent : @7,				#content : 'Pruebas unitarias de la clase Vaso.',				#stamp : 'TomasBustamante 3/25/2018 01:06'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas-Tests,			#package : #MaquinaBebidas-Tests,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Pruebas unitarias de la clase Vaso.',		#newStamp : 'TomasBustamante 3/25/2018 01:06'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.94052-03:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasVaso,				#isMetaSide : false			},			#name : #test04VolcarElVasoVacioMasDeUnaVezSigueDandoVacio,			#protocol : #tests,			#sourceCode : 'test04VolcarElVasoVacioMasDeUnaVezSigueDandoVacio\r\t" Arrange "\r\t| vaso contenido |\r\tvaso := Vaso new.\r\t\r\t" Act "\r\tvaso agregar: \'cafe\'.\r\t3 timesRepeat: [ vaso volcar ]. " Aqui no necesito guardarme el ingrediente volcado "\r\tcontenido := vaso volcar. " Aqui si "\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/24/2018 12:51',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.943932-03:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasVaso,				#isMetaSide : false			},			#name : #test01VasoRecienInstanciadoEstaVacio,			#protocol : #tests,			#sourceCode : 'test01VasoRecienInstanciadoEstaVacio\r\t" Arrange "\r\t| vaso contenido |\r\tvaso := Vaso new.\r\t\r\t" Act "\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/22/2018 19:47',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.948472-03:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasVaso,				#isMetaSide : false			},			#name : #test06AgregoCafeYAzucarAlVasoYAlVolcarloLaSegundaVezDevuelveCafe,			#protocol : #tests,			#sourceCode : 'test06AgregoCafeYAzucarAlVasoYAlVolcarloLaSegundaVezDevuelveCafe\r\t" Arrange "\r\t| vaso contenido |\r\tvaso := Vaso new.\r\t\r\t" Act "\r\tvaso agregar: \'cafe\'.\r\tvaso agregar: \'azucar\'.\r\tvaso volcar. " Aqui no necesito guardarme el ingrediente volcado "\r\tcontenido := vaso volcar. " Aqui si "\r\t\r\t" Assert "\r\tself assert: contenido equals: \'cafe\'.',			#stamp : 'TomasBustamante 3/23/2018 18:56',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.952181-03:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasVaso,				#isMetaSide : false			},			#name : #test03VolcarVasoConCafeVaciaElVaso,			#protocol : #tests,			#sourceCode : 'test03VolcarVasoConCafeVaciaElVaso\r\t" Arrange "\r\t| vaso contenido |\r\tvaso := Vaso new.\r\t\r\t" Act "\r\tvaso agregar: \'cafe\'.\r\tvaso volcar. " Aqui no necesito guardarme el ingrediente volcado "\r\tcontenido := vaso volcar. " Aqui si "\r\t\r\t" Assert "\r\tself assert: contenido equals: \'vacio\'.',			#stamp : 'TomasBustamante 3/22/2018 20:38',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.956773-03:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasVaso,				#isMetaSide : false			},			#name : #test02VolcarVasoConCafeDevuelveCafe,			#protocol : #tests,			#sourceCode : 'test02VolcarVasoConCafeDevuelveCafe\r\t" Arrange "\r\t| vaso contenido |\r\tvaso := Vaso new.\r\t\r\t" Act "\r\tvaso agregar: \'cafe\'.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'cafe\'.',			#stamp : 'TomasBustamante 3/22/2018 19:50',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.960707-03:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasVaso,				#isMetaSide : false			},			#name : #test05AgregoCafeYAzucarAlVasoYAlVolcarloUnaVezDevuelveElAzucar,			#protocol : #tests,			#sourceCode : 'test05AgregoCafeYAzucarAlVasoYAlVolcarloUnaVezDevuelveElAzucar\r\t" Arrange "\r\t| vaso contenido |\r\tvaso := Vaso new.\r\t\r\t" Act "\r\tvaso agregar: \'cafe\'.\r\tvaso agregar: \'azucar\'.\r\tcontenido := vaso volcar.\r\t\r\t" Assert "\r\tself assert: contenido equals: \'azucar\'.',			#stamp : 'TomasBustamante 3/23/2018 18:55',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:22:38.966023-03:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasVaso,				#isMetaSide : false			},			#name : #test07AgregoTresIngredientesYAlVolcarlosLosDevuelveEnOrdenInverso,			#protocol : #tests,			#sourceCode : 'test07AgregoTresIngredientesYAlVolcarlosLosDevuelveEnOrdenInverso\r\t" Arrange "\r\t| vaso contenidoReal contenidoEsperado |\r\tvaso := Vaso new.\r\tcontenidoReal := OrderedCollection new.\r\tcontenidoEsperado := OrderedCollection new.\r\tcontenidoEsperado add: \'azucar\'.\r\tcontenidoEsperado add: \'leche de soja\'.\r\tcontenidoEsperado add: \'cafe\'.\r\t\r\t" Act "\r\tvaso agregar: \'cafe\'.\r\tvaso agregar: \'leche de soja\'.\r\tvaso agregar: \'azucar\'.\r\t3 timesRepeat: [ contenidoReal add: (vaso volcar) ].\r\t\r\t" Assert "\r\tself assert: contenidoReal equals: contenidoEsperado.',			#stamp : 'TomasBustamante 3/24/2018 12:51',			#package : #MaquinaBebidas-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.937323-03:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpCategoryAddition {		#classCategoryName : #MaquinaBebidas,		#affectedPackageName : #MaquinaBebidas	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.960645-03:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Azucarero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Azucarero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Azucarero class\r\tinstanceVariableNames: \'\''				},				#name : #'Azucarero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Azucarero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.962556-03:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Azucarero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Azucarero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Azucarero class\r\tinstanceVariableNames: \'\''				},				#name : #'Azucarero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Azucarero,					#isMetaSide : false				},				#parent : @7,				#content : 'Recibe un recipiente y una cantidad n y se encarga de poner n cantidades de azucar en el recipiente recibido.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Recibe un recipiente y una cantidad n y se encarga de poner n cantidades de azucar en el recipiente recibido.',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.967789-03:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Azucarero,				#isMetaSide : false			},			#name : #'endulzar:en:',			#protocol : #adding,			#sourceCode : 'endulzar: unaCantidad en: unRecipiente\r\tunaCantidad timesRepeat: [ \r\t\tunRecipiente agregar: \'azucar\'.\r\t].\r\t\r',			#stamp : 'TomasBustamante 3/22/2018 20:21',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.974184-03:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Cafetero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Cafetero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Cafetero class\r\tinstanceVariableNames: \'\''				},				#name : #'Cafetero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Cafetero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.975568-03:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Cafetero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Cafetero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Cafetero class\r\tinstanceVariableNames: \'\''				},				#name : #'Cafetero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Cafetero,					#isMetaSide : false				},				#parent : @7,				#content : 'Recibe un recipiente y se encarga de poner café en el recipiente recibido.',				#stamp : 'TomasBustamante 3/24/2018 21:53'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Recibe un recipiente y se encarga de poner café en el recipiente recibido.',		#newStamp : 'TomasBustamante 3/24/2018 21:53'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.977354-03:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Cafetero,				#isMetaSide : false			},			#name : #'prepararUnoEn:',			#protocol : #adding,			#sourceCode : 'prepararUnoEn: unRecipiente\r\tunRecipiente agregar: \'cafe\'.',			#stamp : 'TomasBustamante 3/23/2018 18:48',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.983586-03:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #HacedorDeCafeConLeche\r\tinstanceVariableNames: \'cafetero lechero\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #HacedorDeCafeConLeche,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #HacedorDeCafeConLeche,						#isMetaSide : false					},					#name : #cafetero,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #HacedorDeCafeConLeche,						#isMetaSide : false					},					#name : #lechero,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'HacedorDeCafeConLeche class\r\tinstanceVariableNames: \'\''				},				#name : #'HacedorDeCafeConLeche class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #HacedorDeCafeConLeche,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.985033-03:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #HacedorDeCafeConLeche\r\tinstanceVariableNames: \'cafetero lechero\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #HacedorDeCafeConLeche,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #HacedorDeCafeConLeche,						#isMetaSide : false					},					#name : #cafetero,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #HacedorDeCafeConLeche,						#isMetaSide : false					},					#name : #lechero,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'HacedorDeCafeConLeche class\r\tinstanceVariableNames: \'\''				},				#name : #'HacedorDeCafeConLeche class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #HacedorDeCafeConLeche,					#isMetaSide : false				},				#parent : @7,				#content : 'Recibe un recipiente y se encarga de poner café y leche en el recipiente recibido.',				#stamp : 'TomasBustamante 3/24/2018 21:53'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Recibe un recipiente y se encarga de poner café y leche en el recipiente recibido.',		#newStamp : 'TomasBustamante 3/24/2018 21:53'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.987744-03:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #HacedorDeCafeConLeche,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tcafetero := Cafetero new.\r\tlechero := Lechero new.',			#stamp : 'TomasBustamante 3/24/2018 12:03',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.990517-03:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #HacedorDeCafeConLeche,				#isMetaSide : false			},			#name : #'prepararUnoEn:',			#protocol : #adding,			#sourceCode : 'prepararUnoEn: unRecipiente\r\tcafetero prepararUnoEn: unRecipiente.\r\tlechero prepararUnoEn: unRecipiente.',			#stamp : 'TomasBustamante 3/24/2018 12:02',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.996073-03:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #HacedorDeTeConLeche\r\tinstanceVariableNames: \'tetero lechero\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #HacedorDeTeConLeche,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #HacedorDeTeConLeche,						#isMetaSide : false					},					#name : #tetero,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #HacedorDeTeConLeche,						#isMetaSide : false					},					#name : #lechero,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'HacedorDeTeConLeche class\r\tinstanceVariableNames: \'\''				},				#name : #'HacedorDeTeConLeche class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #HacedorDeTeConLeche,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.997235-03:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #HacedorDeTeConLeche\r\tinstanceVariableNames: \'tetero lechero\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #HacedorDeTeConLeche,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #HacedorDeTeConLeche,						#isMetaSide : false					},					#name : #tetero,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #HacedorDeTeConLeche,						#isMetaSide : false					},					#name : #lechero,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'HacedorDeTeConLeche class\r\tinstanceVariableNames: \'\''				},				#name : #'HacedorDeTeConLeche class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #HacedorDeTeConLeche,					#isMetaSide : false				},				#parent : @7,				#content : 'Recibe un recipiente y se encarga de poner te y leche en el recipiente recibido.',				#stamp : 'TomasBustamante 3/24/2018 21:54'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Recibe un recipiente y se encarga de poner te y leche en el recipiente recibido.',		#newStamp : 'TomasBustamante 3/24/2018 21:54'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:11.998996-03:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #HacedorDeTeConLeche,				#isMetaSide : false			},			#name : #'prepararUnoEn:',			#protocol : #adding,			#sourceCode : 'prepararUnoEn: unRecipiente\r\ttetero prepararUnoEn: unRecipiente.\r\tlechero prepararUnoEn: unRecipiente.',			#stamp : 'TomasBustamante 3/24/2018 12:54',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.001355-03:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #HacedorDeTeConLeche,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\ttetero := Tetero new.\r\tlechero := Lechero new.',			#stamp : 'TomasBustamante 3/24/2018 12:54',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.007349-03:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Lechero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Lechero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Lechero class\r\tinstanceVariableNames: \'\''				},				#name : #'Lechero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Lechero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.008668-03:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Lechero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Lechero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Lechero class\r\tinstanceVariableNames: \'\''				},				#name : #'Lechero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Lechero,					#isMetaSide : false				},				#parent : @7,				#content : 'Recibe un recipiente y se encarga de poner leche  en el recipiente recibido.',				#stamp : 'TomasBustamante 3/24/2018 21:53'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Recibe un recipiente y se encarga de poner leche  en el recipiente recibido.',		#newStamp : 'TomasBustamante 3/24/2018 21:53'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.010741-03:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Lechero,				#isMetaSide : false			},			#name : #'prepararUnoEn:',			#protocol : #adding,			#sourceCode : 'prepararUnoEn: unRecipiente\r\tunRecipiente agregar: \'leche\'.',			#stamp : 'TomasBustamante 3/24/2018 00:31',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.015815-03:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MaquinaBebidas\r\tinstanceVariableNames: \'hacedorDeCafeConLeche hacedorDeTeConLeche azucarero\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #MaquinaBebidas,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MaquinaBebidas,						#isMetaSide : false					},					#name : #hacedorDeCafeConLeche,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MaquinaBebidas,						#isMetaSide : false					},					#name : #hacedorDeTeConLeche,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MaquinaBebidas,						#isMetaSide : false					},					#name : #azucarero,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MaquinaBebidas class\r\tinstanceVariableNames: \'\''				},				#name : #'MaquinaBebidas class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MaquinaBebidas,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.016945-03:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MaquinaBebidas\r\tinstanceVariableNames: \'hacedorDeCafeConLeche hacedorDeTeConLeche azucarero\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #MaquinaBebidas,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MaquinaBebidas,						#isMetaSide : false					},					#name : #hacedorDeCafeConLeche,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MaquinaBebidas,						#isMetaSide : false					},					#name : #hacedorDeTeConLeche,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MaquinaBebidas,						#isMetaSide : false					},					#name : #azucarero,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MaquinaBebidas class\r\tinstanceVariableNames: \'\''				},				#name : #'MaquinaBebidas class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MaquinaBebidas,					#isMetaSide : false				},				#parent : @7,				#content : 'Recibe un recipiente y una cantidad n de azucar y se encarga de llenarlo con cafe (o te) con leche y n cantidades de azucar.',				#stamp : 'TomasBustamante 3/24/2018 21:54'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Recibe un recipiente y una cantidad n de azucar y se encarga de llenarlo con cafe (o te) con leche y n cantidades de azucar.',		#newStamp : 'TomasBustamante 3/24/2018 21:54'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.020346-03:00' ],		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MaquinaBebidas,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\thacedorDeCafeConLeche := HacedorDeCafeConLeche new.\r\thacedorDeTeConLeche := HacedorDeTeConLeche new.\r\tazucarero := Azucarero new.',			#stamp : 'TomasBustamante 3/24/2018 13:07',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.02252-03:00' ],		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MaquinaBebidas,				#isMetaSide : false			},			#name : #'hacerCafeConLecheEn:conCantidadDeAzucar:',			#protocol : #adding,			#sourceCode : 'hacerCafeConLecheEn: unVaso conCantidadDeAzucar: unaCantidad \r\thacedorDeCafeConLeche prepararUnoEn: unVaso.\r\tazucarero endulzar: unaCantidad en: unVaso.',			#stamp : 'TomasBustamante 3/24/2018 13:07',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.024331-03:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MaquinaBebidas,				#isMetaSide : false			},			#name : #'hacerTeConLecheEn:conCantidadDeAzucar:',			#protocol : #adding,			#sourceCode : 'hacerTeConLecheEn: unVaso conCantidadDeAzucar: unaCantidad \r\thacedorDeTeConLeche prepararUnoEn: unVaso.\r\tazucarero endulzar: unaCantidad en: unVaso.',			#stamp : 'TomasBustamante 3/24/2018 21:56',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.029929-03:00' ],		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tetero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Tetero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tetero class\r\tinstanceVariableNames: \'\''				},				#name : #'Tetero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tetero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.031041-03:00' ],		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tetero\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Tetero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tetero class\r\tinstanceVariableNames: \'\''				},				#name : #'Tetero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tetero,					#isMetaSide : false				},				#parent : @7,				#content : 'Recibe un recipiente y se encarga de poner té  en el recipiente recibido.',				#stamp : 'TomasBustamante 3/24/2018 21:53'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Recibe un recipiente y se encarga de poner té  en el recipiente recibido.',		#newStamp : 'TomasBustamante 3/24/2018 21:53'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.033159-03:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tetero,				#isMetaSide : false			},			#name : #'prepararUnoEn:',			#protocol : #adding,			#sourceCode : 'prepararUnoEn: unRecipiente\r\tunRecipiente agregar: \'te\'.',			#stamp : 'TomasBustamante 3/23/2018 19:54',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.038261-03:00' ],		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Vaso\r\tinstanceVariableNames: \'contenido\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Vaso,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Vaso,						#isMetaSide : false					},					#name : #contenido,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Vaso class\r\tinstanceVariableNames: \'\''				},				#name : #'Vaso class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Vaso,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.039511-03:00' ],		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Vaso\r\tinstanceVariableNames: \'contenido\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MaquinaBebidas\''			},			#name : #Vaso,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Vaso,						#isMetaSide : false					},					#name : #contenido,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Vaso class\r\tinstanceVariableNames: \'\''				},				#name : #'Vaso class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Vaso,					#isMetaSide : false				},				#parent : @7,				#content : 'Recipiente que recibe diversos ingredientes que los agrega a su contenido y que, al volcarlos los devuelve en el orden inverso en el que fueron agregados (FILO). Si el vaso está vacío devuelve \'vacio\' al volcarlo.',				#stamp : 'TomasBustamante 3/24/2018 23:50'			},			#classVariables : OrderedCollection [ ],			#category : #MaquinaBebidas,			#package : #MaquinaBebidas,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Recipiente que recibe diversos ingredientes que los agrega a su contenido y que, al volcarlos los devuelve en el orden inverso en el que fueron agregados (FILO). Si el vaso está vacío devuelve \'vacio\' al volcarlo.',		#newStamp : 'TomasBustamante 3/24/2018 23:50'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.041896-03:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Vaso,				#isMetaSide : false			},			#name : #volcar,			#protocol : #accesing,			#sourceCode : 'volcar\r\t(contenido isEmpty) ifTrue: [ ^ \'vacio\' ].\r\t^ (contenido pop).',			#stamp : 'TomasBustamante 3/23/2018 18:55',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.044391-03:00' ],		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Vaso,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tcontenido := Stack new.',			#stamp : 'TomasBustamante 3/23/2018 18:54',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:23:12.046493-03:00' ],		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Vaso,				#isMetaSide : false			},			#name : #'agregar:',			#protocol : #adding,			#sourceCode : 'agregar: unIngrediente\r\tcontenido push: unIngrediente.',			#stamp : 'TomasBustamante 3/23/2018 18:55',			#package : #MaquinaBebidas		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:51:47.538678-03:00' ],		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).\r\t\r\t',			#stamp : 'andre 9/23/2018 17:51',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T17:52:09.692295-03:00' ],		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).\r\t\r\t',			#stamp : 'andre 9/23/2018 17:51',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    \tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    \tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).\r\t\r\t',			#stamp : 'andre 9/23/2018 17:52',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:00:27.212152-03:00' ],		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r\t\r\t\r\t\r',			#stamp : 'andre 9/23/2018 18:00',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:04:21.534817-03:00' ],		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    \tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    \tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).\r\t\r\t',			#stamp : 'andre 9/23/2018 17:52',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r\t\r\t',			#stamp : 'andre 9/23/2018 18:04',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:06:09.040395-03:00' ],		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r\t\r\t',			#stamp : 'andre 9/23/2018 18:04',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\t\r\t\r\t',			#stamp : 'andre 9/23/2018 18:06',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:07:22.355789-03:00' ],		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test04CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).\r\t\r\t',			#stamp : 'andre 9/23/2018 18:07',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:07:28.071554-03:00' ],		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\t\r\t\r\t',			#stamp : 'andre 9/23/2018 18:06',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:10:38.746-03:00' ],		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).\r\t\r\t',			#stamp : 'andre 9/23/2018 18:10',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:10:45.084636-03:00' ],		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test04CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t\tcalendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).\r\t\r\t',			#stamp : 'andre 9/23/2018 18:07',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:11:52.319828-03:00' ],		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora',			#stamp : 'andre 9/23/2018 18:11',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:13:01.14974-03:00' ],		#prior : OmReference [ '142' ],		#self : OmReference [ '143' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r\t\r\t\r\t\r',			#stamp : 'andre 9/23/2018 18:00',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r\t   ^true.\r\t\r\t\r',			#stamp : 'andre 9/23/2018 18:13',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:13:20.993418-03:00' ],		#prior : OmReference [ '143' ],		#self : OmReference [ '144' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).\r\t\r\t',			#stamp : 'andre 9/23/2018 18:10',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\t',			#stamp : 'andre 9/23/2018 18:13',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:13:46.210157-03:00' ],		#prior : OmReference [ '144' ],		#self : OmReference [ '145' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r\t   ^true.\r\t\r\t\r',			#stamp : 'andre 9/23/2018 18:13',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r\t\r\t\r',			#stamp : 'andre 9/23/2018 18:13',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:13:51.839735-03:00' ],		#prior : OmReference [ '145' ],		#self : OmReference [ '146' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora',			#stamp : 'andre 9/23/2018 18:11',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r ^true.',			#stamp : 'andre 9/23/2018 18:13',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:14:37.04025-03:00' ],		#prior : OmReference [ '146' ],		#self : OmReference [ '147' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\t',			#stamp : 'andre 9/23/2018 18:13',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:14',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:14:51.513144-03:00' ],		#prior : OmReference [ '147' ],		#self : OmReference [ '148' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:14',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\t"self assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10)."\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:14',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:15:24.893654-03:00' ],		#prior : OmReference [ '148' ],		#self : OmReference [ '149' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r ^true.',			#stamp : 'andre 9/23/2018 18:15',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r ^false.',			#stamp : 'andre 9/23/2018 18:15',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:15:38.410138-03:00' ],		#prior : OmReference [ '149' ],		#self : OmReference [ '150' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\t"self assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10)."\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:14',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:15',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:15:40.281439-03:00' ],		#prior : OmReference [ '150' ],		#self : OmReference [ '151' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r ^false.',			#stamp : 'andre 9/23/2018 18:15',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r ^true.',			#stamp : 'andre 9/23/2018 18:15',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:34:50.989312-03:00' ],		#prior : OmReference [ '151' ],		#self : OmReference [ '152' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1-Tests\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1-Tests,			#package : #TP1-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:35:16.055869-03:00' ],		#prior : OmReference [ '152' ],		#self : OmReference [ '153' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#Evento ))'	}}OmEntry {	#tags : {		#author : 'andre',		#prior : OmReference [ '153' ],		#self : OmReference [ '154' ],		#time : DateAndTime [ '2018-09-23T18:35:16.169636-03:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'TP1-Tests\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteEvento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteEvento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1-Tests,			#package : #TP1-Tests,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:36:45.153802-03:00' ],		#prior : OmReference [ '154' ],		#self : OmReference [ '155' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r',			#stamp : 'andre 9/23/2018 18:36',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:37:13.344982-03:00' ],		#prior : OmReference [ '155' ],		#self : OmReference [ '156' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:37',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:41:05.754118-03:00' ],		#prior : OmReference [ '156' ],		#self : OmReference [ '157' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEn201905411\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:15',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:41:32.06835-03:00' ],		#prior : OmReference [ '157' ],		#self : OmReference [ '158' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:37',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\t"self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11)."',			#stamp : 'andre 9/23/2018 18:41',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:42:00.873669-03:00' ],		#prior : OmReference [ '158' ],		#self : OmReference [ '159' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\t"self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11)."',			#stamp : 'andre 9/23/2018 18:41',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test03CalendarioDeberiaTenerUnEventoConNombreSiestaInvitadoPedroEnAnio2019Mes5Dia4Hora10\r\r\t| calendario invitados |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\t invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\t calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r\tself assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\tself deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'andre 9/23/2018 18:42',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:42:22.561895-03:00' ],		#prior : OmReference [ '159' ],		#self : OmReference [ '160' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r',			#stamp : 'andre 9/23/2018 18:36',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:45:34.399341-03:00' ],		#prior : OmReference [ '160' ],		#self : OmReference [ '161' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r\t\r\t\r',			#stamp : 'andre 9/23/2018 18:13',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r\t| eventosConNombre |\r\t\r\teventosConNombre := OrderedCollection new.\r\t\r\teventosConNombre add: nombreEvento.\r\t\r',			#stamp : 'andre 9/23/2018 18:45',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:46:12.947617-03:00' ],		#prior : OmReference [ '161' ],		#self : OmReference [ '162' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t\r\t| eventosConNombre |\r\t\r\teventosConNombre := OrderedCollection new.\r\t\r\teventosConNombre add: nombreEvento.\r\t\r',			#stamp : 'andre 9/23/2018 18:45',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoConNombre:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoConNombre: nombreEvento invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t\r',			#stamp : 'andre 9/23/2018 18:46',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:46:47.30694-03:00' ],		#prior : OmReference [ '162' ],		#self : OmReference [ '163' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #'as yet unclassified',			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t',			#stamp : 'andre 9/23/2018 18:46',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T18:46:47.384975-03:00' ],		#prior : OmReference [ '163' ],		#self : OmReference [ '164' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #'as yet unclassified',			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t',			#stamp : 'andre 9/23/2018 18:46',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t',			#stamp : 'andre 9/23/2018 18:46',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:15:29.088417-03:00' ],		#prior : OmReference [ '164' ],		#self : OmReference [ '165' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t',			#stamp : 'andre 9/23/2018 18:46',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento new.\r\t',			#stamp : 'andre 9/23/2018 21:15',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:15:59.905899-03:00' ],		#prior : OmReference [ '165' ],		#self : OmReference [ '166' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:18:17.864579-03:00' ],		#prior : OmReference [ '166' ],		#self : OmReference [ '167' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento new.\r\t',			#stamp : 'andre 9/23/2018 21:15',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento conNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio:2019 enMes:5 enDia:4 yEnHora: 10 .\r\t',			#stamp : 'andre 9/23/2018 21:18',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:36:12.348019-03:00' ],		#prior : OmReference [ '167' ],		#self : OmReference [ '168' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento conNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio:2019 enMes:5 enDia:4 yEnHora: 10 .\r\t',			#stamp : 'andre 9/23/2018 21:18',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio:2019 enMes:5 enDia:4 yEnHora: 10 .\r\t',			#stamp : 'andre 9/23/2018 21:36',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:36:15.566805-03:00' ],		#prior : OmReference [ '168' ],		#self : OmReference [ '169' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio:2019 enMes:5 enDia:4 yEnHora: 10 .\r\t',			#stamp : 'andre 9/23/2018 21:36',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio:2019 enMes:5 enDia:4 yEnHora: 10.\r\t',			#stamp : 'andre 9/23/2018 21:36',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:36:19.107918-03:00' ],		#prior : OmReference [ '169' ],		#self : OmReference [ '170' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio:2019 enMes:5 enDia:4 yEnHora: 10.\r\t',			#stamp : 'andre 9/23/2018 21:36',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes:5 enDia:4 yEnHora: 10.\r\t',			#stamp : 'andre 9/23/2018 21:36',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:37:55.26167-03:00' ],		#prior : OmReference [ '170' ],		#self : OmReference [ '171' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: invitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r',			#stamp : 'andre 9/23/2018 21:37',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:38:24.508048-03:00' ],		#prior : OmReference [ '171' ],		#self : OmReference [ '172' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: invitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r',			#stamp : 'andre 9/23/2018 21:37',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: invitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t',			#stamp : 'andre 9/23/2018 21:38',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:39:07.042684-03:00' ],		#prior : OmReference [ '172' ],		#self : OmReference [ '173' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes:5 enDia:4 yEnHora: 10.\r\t',			#stamp : 'andre 9/23/2018 21:36',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t',			#stamp : 'andre 9/23/2018 21:39',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:44:43.140912-03:00' ],		#prior : OmReference [ '173' ],		#self : OmReference [ '174' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t',			#stamp : 'andre 9/23/2018 21:39',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.',			#stamp : 'andre 9/23/2018 21:44',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:45:30.32467-03:00' ],		#prior : OmReference [ '174' ],		#self : OmReference [ '175' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #nombre,			#protocol : #'as yet unclassified',			#sourceCode : 'nombre\r\t^\'Siesta\'.',			#stamp : 'andre 9/23/2018 21:45',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:45:58.614934-03:00' ],		#prior : OmReference [ '175' ],		#self : OmReference [ '176' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: invitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t',			#stamp : 'andre 9/23/2018 21:38',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: invitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t^Evento new.',			#stamp : 'andre 9/23/2018 21:45',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:47:11.295528-03:00' ],		#prior : OmReference [ '176' ],		#self : OmReference [ '177' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.',			#stamp : 'andre 9/23/2018 21:44',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre = \'Siesta\'.',			#stamp : 'andre 9/23/2018 21:47',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:47:34.952148-03:00' ],		#prior : OmReference [ '177' ],		#self : OmReference [ '178' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre = \'Siesta\'.',			#stamp : 'andre 9/23/2018 21:47',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.',			#stamp : 'andre 9/23/2018 21:47',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:56:18.019562-03:00' ],		#prior : OmReference [ '178' ],		#self : OmReference [ '179' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.',			#stamp : 'andre 9/23/2018 21:56',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:56:21.30361-03:00' ],		#prior : OmReference [ '179' ],		#self : OmReference [ '180' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.',			#stamp : 'andre 9/23/2018 21:47',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T21:57:53.482044-03:00' ],		#prior : OmReference [ '180' ],		#self : OmReference [ '181' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue',			#stamp : 'andre 9/23/2018 21:57',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:01:34.443724-03:00' ],		#prior : OmReference [ '181' ],		#self : OmReference [ '182' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.',			#stamp : 'andre 9/23/2018 21:56',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: \'2019\'.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4\r\tself assert: nuevoEvento yEnHora equals: 5.',			#stamp : 'andre 9/23/2018 22:01',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:03:08.855611-03:00' ],		#prior : OmReference [ '182' ],		#self : OmReference [ '183' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #invitados,			#protocol : #'as yet unclassified',			#sourceCode : 'invitados\r\t  ^\'Pedro\'.',			#stamp : 'andre 9/23/2018 22:03',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:03:41.049885-03:00' ],		#prior : OmReference [ '183' ],		#self : OmReference [ '184' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: \'2019\'.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4\r\tself assert: nuevoEvento yEnHora equals: 5.',			#stamp : 'andre 9/23/2018 22:01',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: \'2019\'.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 5.',			#stamp : 'andre 9/23/2018 22:03',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:04:09.338776-03:00' ],		#prior : OmReference [ '184' ],		#self : OmReference [ '185' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #enAnio,			#protocol : #'as yet unclassified',			#sourceCode : 'enAnio\r\t^2019.',			#stamp : 'andre 9/23/2018 22:04',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:04:35.223077-03:00' ],		#prior : OmReference [ '185' ],		#self : OmReference [ '186' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #enDia,			#protocol : #'as yet unclassified',			#sourceCode : 'enDia\r\t^5.',			#stamp : 'andre 9/23/2018 22:04',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:05:35.186462-03:00' ],		#prior : OmReference [ '186' ],		#self : OmReference [ '187' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #enMes,			#protocol : #'as yet unclassified',			#sourceCode : 'enMes\r ^5.',			#stamp : 'andre 9/23/2018 22:05',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:05:40.716524-03:00' ],		#prior : OmReference [ '187' ],		#self : OmReference [ '188' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #enDia,			#protocol : #'as yet unclassified',			#sourceCode : 'enDia\r\t^5.',			#stamp : 'andre 9/23/2018 22:04',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #enDia,			#protocol : #'as yet unclassified',			#sourceCode : 'enDia\r\t^4.',			#stamp : 'andre 9/23/2018 22:05',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:06:32.728407-03:00' ],		#prior : OmReference [ '188' ],		#self : OmReference [ '189' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #yEnHora,			#protocol : #'as yet unclassified',			#sourceCode : 'yEnHora\r\t^5.',			#stamp : 'andre 9/23/2018 22:06',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:07:36.715224-03:00' ],		#prior : OmReference [ '189' ],		#self : OmReference [ '190' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #yEnHora,			#protocol : #'as yet unclassified',			#sourceCode : 'yEnHora\r\t^5.',			#stamp : 'andre 9/23/2018 22:06',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #yEnHora,			#protocol : #'as yet unclassified',			#sourceCode : 'yEnHora\r\t^10.',			#stamp : 'andre 9/23/2018 22:07',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:08:07.836955-03:00' ],		#prior : OmReference [ '190' ],		#self : OmReference [ '191' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: \'2019\'.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 5.',			#stamp : 'andre 9/23/2018 22:03',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: \'2019\'.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:08',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:08:59.036114-03:00' ],		#prior : OmReference [ '191' ],		#self : OmReference [ '192' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: \'2019\'.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:08',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test04SeCreaUnEventoconNombreSiestaInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Siesta\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Siesta\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: 2019.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:08',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:09:54.280995-03:00' ],		#prior : OmReference [ '192' ],		#self : OmReference [ '193' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue',			#stamp : 'andre 9/23/2018 21:57',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Asado\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Asado\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: 2019.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:09',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:10:16.25789-03:00' ],		#prior : OmReference [ '193' ],		#self : OmReference [ '194' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Asado\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 5 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Asado\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: 2019.\r\tself assert: nuevoEvento enMes equals: 5.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:09',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Asado\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 11 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Asado\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: 2019.\r\tself assert: nuevoEvento enMes equals: 11.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:10',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:11:10.837658-03:00' ],		#prior : OmReference [ '194' ],		#self : OmReference [ '195' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\r\t^\'Siesta\'.',			#stamp : 'andre 9/23/2018 22:11',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:12:10.106922-03:00' ],		#prior : OmReference [ '195' ],		#self : OmReference [ '196' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #nombre,			#protocol : #'as yet unclassified',			#sourceCode : 'nombre\r\t^\'Siesta\'.',			#stamp : 'andre 9/23/2018 21:45',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:13:29.865088-03:00' ],		#prior : OmReference [ '196' ],		#self : OmReference [ '197' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:14:16.013795-03:00' ],		#prior : OmReference [ '197' ],		#self : OmReference [ '198' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\r\t^\'Siesta\'.',			#stamp : 'andre 9/23/2018 22:12',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\r\teventoNombre := unNombre.\r\t',			#stamp : 'andre 9/23/2018 22:14',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:14:50.652889-03:00' ],		#prior : OmReference [ '198' ],		#self : OmReference [ '199' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'invitados:',			#protocol : #'as yet unclassified',			#sourceCode : 'invitados: invitadosAlEvento\r\t  eventoInvitados := invitadosAlEvento.',			#stamp : 'andre 9/23/2018 22:14',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:14:57.212566-03:00' ],		#prior : OmReference [ '199' ],		#self : OmReference [ '200' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #invitados,			#protocol : #'as yet unclassified',			#sourceCode : 'invitados\r\t  ^\'Pedro\'.',			#stamp : 'andre 9/23/2018 22:03',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:15:27.55784-03:00' ],		#prior : OmReference [ '200' ],		#self : OmReference [ '201' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'enAnio:',			#protocol : #'as yet unclassified',			#sourceCode : 'enAnio: unAnio\r\teventoAnio := unAnio.',			#stamp : 'andre 9/23/2018 22:15',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:15:32.695987-03:00' ],		#prior : OmReference [ '201' ],		#self : OmReference [ '202' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #enAnio,			#protocol : #'as yet unclassified',			#sourceCode : 'enAnio\r\t^2019.',			#stamp : 'andre 9/23/2018 22:04',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:15:56.208556-03:00' ],		#prior : OmReference [ '202' ],		#self : OmReference [ '203' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'enMes:',			#protocol : #'as yet unclassified',			#sourceCode : 'enMes: unMes\r eventoMes := unMes.',			#stamp : 'andre 9/23/2018 22:15',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:16:01.563421-03:00' ],		#prior : OmReference [ '203' ],		#self : OmReference [ '204' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'enMes:',			#protocol : #'as yet unclassified',			#sourceCode : 'enMes: unMes\r eventoMes := unMes.',			#stamp : 'andre 9/23/2018 22:15',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'enMes:',			#protocol : #'as yet unclassified',			#sourceCode : 'enMes: unMes\r\teventoMes := unMes.',			#stamp : 'andre 9/23/2018 22:16',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:16:05.883877-03:00' ],		#prior : OmReference [ '204' ],		#self : OmReference [ '205' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #enMes,			#protocol : #'as yet unclassified',			#sourceCode : 'enMes\r ^5.',			#stamp : 'andre 9/23/2018 22:05',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:16:41.501816-03:00' ],		#prior : OmReference [ '205' ],		#self : OmReference [ '206' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'Dia:',			#protocol : #'as yet unclassified',			#sourceCode : 'Dia: unDia\r\teventoDia := unDia.',			#stamp : 'andre 9/23/2018 22:16',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:16:47.417208-03:00' ],		#prior : OmReference [ '206' ],		#self : OmReference [ '207' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #enDia,			#protocol : #'as yet unclassified',			#sourceCode : 'enDia\r\t^4.',			#stamp : 'andre 9/23/2018 22:05',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:16:56.817786-03:00' ],		#prior : OmReference [ '207' ],		#self : OmReference [ '208' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'mes:',			#protocol : #'as yet unclassified',			#sourceCode : 'mes: unMes\r\teventoMes := unMes.',			#stamp : 'andre 9/23/2018 22:16',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:17:00.286286-03:00' ],		#prior : OmReference [ '208' ],		#self : OmReference [ '209' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'enMes:',			#protocol : #'as yet unclassified',			#sourceCode : 'enMes: unMes\r\teventoMes := unMes.',			#stamp : 'andre 9/23/2018 22:16',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:17:06.016347-03:00' ],		#prior : OmReference [ '209' ],		#self : OmReference [ '210' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'dia:',			#protocol : #'as yet unclassified',			#sourceCode : 'dia: unDia\r\teventoDia := unDia.',			#stamp : 'andre 9/23/2018 22:17',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:17:08.947034-03:00' ],		#prior : OmReference [ '210' ],		#self : OmReference [ '211' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'Dia:',			#protocol : #'as yet unclassified',			#sourceCode : 'Dia: unDia\r\teventoDia := unDia.',			#stamp : 'andre 9/23/2018 22:16',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:17:15.438372-03:00' ],		#prior : OmReference [ '211' ],		#self : OmReference [ '212' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'anio:',			#protocol : #'as yet unclassified',			#sourceCode : 'anio: unAnio\r\teventoAnio := unAnio.',			#stamp : 'andre 9/23/2018 22:17',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:17:18.691084-03:00' ],		#prior : OmReference [ '212' ],		#self : OmReference [ '213' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'enAnio:',			#protocol : #'as yet unclassified',			#sourceCode : 'enAnio: unAnio\r\teventoAnio := unAnio.',			#stamp : 'andre 9/23/2018 22:15',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:18:12.796916-03:00' ],		#prior : OmReference [ '213' ],		#self : OmReference [ '214' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'hora:',			#protocol : #'as yet unclassified',			#sourceCode : 'hora: unaHora\r\teventoHora := unaHora.',			#stamp : 'andre 9/23/2018 22:18',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:18:18.598382-03:00' ],		#prior : OmReference [ '214' ],		#self : OmReference [ '215' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #yEnHora,			#protocol : #'as yet unclassified',			#sourceCode : 'yEnHora\r\t^10.',			#stamp : 'andre 9/23/2018 22:07',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:25:37.4464-03:00' ],		#prior : OmReference [ '215' ],		#self : OmReference [ '216' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.',			#stamp : 'andre 9/23/2018 22:25',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:25:49.396985-03:00' ],		#prior : OmReference [ '216' ],		#self : OmReference [ '217' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'hora:',			#protocol : #'as yet unclassified',			#sourceCode : 'hora: unaHora\r\teventoHora := unaHora.',			#stamp : 'andre 9/23/2018 22:18',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:25:53.955453-03:00' ],		#prior : OmReference [ '217' ],		#self : OmReference [ '218' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'anio:',			#protocol : #'as yet unclassified',			#sourceCode : 'anio: unAnio\r\teventoAnio := unAnio.',			#stamp : 'andre 9/23/2018 22:17',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:25:57.225232-03:00' ],		#prior : OmReference [ '218' ],		#self : OmReference [ '219' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'dia:',			#protocol : #'as yet unclassified',			#sourceCode : 'dia: unDia\r\teventoDia := unDia.',			#stamp : 'andre 9/23/2018 22:17',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:25:59.180771-03:00' ],		#prior : OmReference [ '219' ],		#self : OmReference [ '220' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'invitados:',			#protocol : #'as yet unclassified',			#sourceCode : 'invitados: invitadosAlEvento\r\t  eventoInvitados := invitadosAlEvento.',			#stamp : 'andre 9/23/2018 22:14',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:26:04.836433-03:00' ],		#prior : OmReference [ '220' ],		#self : OmReference [ '221' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\r\teventoNombre := unNombre.\r\t',			#stamp : 'andre 9/23/2018 22:14',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:26:07.991733-03:00' ],		#prior : OmReference [ '221' ],		#self : OmReference [ '222' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'mes:',			#protocol : #'as yet unclassified',			#sourceCode : 'mes: unMes\r\teventoMes := unMes.',			#stamp : 'andre 9/23/2018 22:16',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:28:03.375704-03:00' ],		#prior : OmReference [ '222' ],		#self : OmReference [ '223' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Asado\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 11 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Asado\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: 2019.\r\tself assert: nuevoEvento enMes equals: 11.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:10',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento new inicializarConNombre: \'Asado\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 11 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Asado\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: 2019.\r\tself assert: nuevoEvento enMes equals: 11.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:28',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:29:06.942304-03:00' ],		#prior : OmReference [ '223' ],		#self : OmReference [ '224' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.',			#stamp : 'andre 9/23/2018 22:25',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.',			#stamp : 'andre 9/23/2018 22:29',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:30:17.294499-03:00' ],		#prior : OmReference [ '224' ],		#self : OmReference [ '225' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento new inicializarConNombre: \'Asado\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 11 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Asado\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: 2019.\r\tself assert: nuevoEvento enMes equals: 11.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:28',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue,			#protocol : #tests,			#sourceCode : 'test05SeCreaUnEventoconNombreAsadoInvitadosPedroEnAnio2019Mes5Dia4Hora10DeberiaDevolverTrue\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: \'Asado\' conInvitados: \'Pedro\' enAnio: 2019 enMes: 11 enDia: 4 yEnHora: 10.\r\t\r\tself assert: nuevoEvento nombre equals: \'Asado\'.\r\tself assert: nuevoEvento invitados equals: \'Pedro\'.\r\tself assert: nuevoEvento enAnio equals: 2019.\r\tself assert: nuevoEvento enMes equals: 11.\r\tself assert: nuevoEvento enDia equals: 4.\r\tself assert: nuevoEvento yEnHora equals: 10.',			#stamp : 'andre 9/23/2018 22:30',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:30:39.345586-03:00' ],		#prior : OmReference [ '225' ],		#self : OmReference [ '226' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.',			#stamp : 'andre 9/23/2018 22:29',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:32:35.686685-03:00' ],		#prior : OmReference [ '226' ],		#self : OmReference [ '227' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: invitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t^Evento new.',			#stamp : 'andre 9/23/2018 21:45',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t| nuevoEvento eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora |\r\t\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r\t\t\r\t',			#stamp : 'andre 9/23/2018 22:32',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:33:01.208635-03:00' ],		#prior : OmReference [ '227' ],		#self : OmReference [ '228' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @33				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoNombre,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoInvitados,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoAnio,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoMes,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoDia,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoHora,						#parent : @50					}				],				#baseClass : @33			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @33,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:33:40.283219-03:00' ],		#prior : OmReference [ '228' ],		#self : OmReference [ '229' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoNombre,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoInvitados,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoAnio,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoMes,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoDia,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoHora,						#parent : @24					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoNombre,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoInvitados,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoAnio,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoMes,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoDia,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoHora,						#parent : @50					}				],				#baseClass : @45			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @45,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:34:21.172108-03:00' ],		#prior : OmReference [ '229' ],		#self : OmReference [ '230' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoNombre,						#parent : @12					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoInvitados,						#parent : @12					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoAnio,						#parent : @12					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoMes,						#parent : @12					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoDia,						#parent : @12					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoHora,						#parent : @12					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @33			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @33,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:34:26.432841-03:00' ],		#prior : OmReference [ '230' ],		#self : OmReference [ '231' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:35:29.65246-03:00' ],		#prior : OmReference [ '231' ],		#self : OmReference [ '232' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @33				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoNombre,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoInvitados,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoAnio,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoMes,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoDia,						#parent : @50					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoHora,						#parent : @50					}				],				#baseClass : @33			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @33,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:35:35.862061-03:00' ],		#prior : OmReference [ '232' ],		#self : OmReference [ '233' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t| nuevoEvento eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora |\r\t\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r\t\t\r\t',			#stamp : 'andre 9/23/2018 22:34',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r\t\t\r\t',			#stamp : 'andre 9/23/2018 22:35',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:36:08.999482-03:00' ],		#prior : OmReference [ '233' ],		#self : OmReference [ '234' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoNombre,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoInvitados,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoAnio,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoMes,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoDia,						#parent : @24					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Evento class',							#isMetaSide : true						},						#name : #eventoHora,						#parent : @24					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @45				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @45				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @45				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @45				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @45				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @45				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @45			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @45,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:36:22.638418-03:00' ],		#prior : OmReference [ '234' ],		#self : OmReference [ '235' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'eventoNombre eventoInvitados eventoAnio eventoMes eventoDia eventoHora\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoNombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoInvitados,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoAnio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoMes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoDia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #eventoHora,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @33			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @33,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:37:36.231299-03:00' ],		#prior : OmReference [ '235' ],		#self : OmReference [ '236' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r\t\t\r\t',			#stamp : 'andre 9/23/2018 22:35',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r\t\t\r\t^nuevoEvento.',			#stamp : 'andre 9/23/2018 22:37',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:39:23.264205-03:00' ],		#prior : OmReference [ '236' ],		#self : OmReference [ '237' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r\t\t\r\t^nuevoEvento.',			#stamp : 'andre 9/23/2018 22:38',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r',			#stamp : 'andre 9/23/2018 22:39',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-23T22:40:38.634312-03:00' ],		#prior : OmReference [ '237' ],		#self : OmReference [ '238' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\teventoNombre := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r',			#stamp : 'andre 9/23/2018 22:39',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Evento class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\tnuevoEvento := unNombre .\r\teventoInvitados := losInvitados.\r\teventoAnio := unAnio.\r\teventoMes := unMes.\r\teventoDia := unDia.\r\teventoHora := unaHora.\t\r',			#stamp : 'andre 9/23/2018 22:40',			#package : #TP1		}	}}
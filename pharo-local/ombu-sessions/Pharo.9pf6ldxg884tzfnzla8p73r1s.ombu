OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T20:57:19.997583-03:00' ],		#prior : OmReference [ 'Pharo.5wp4p8a9zitkj3iwnreeigwj0', '72' ],		#self : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Evento',				#traitCompositionSource : '{}',				#definitionSource : 'Evento subclass: #EventoSemanal\r\tinstanceVariableNames: \'semanas\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #EventoSemanal,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #EventoSemanal,						#isMetaSide : false					},					#name : #semanas,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'EventoSemanal class\r\tinstanceVariableNames: \'\''				},				#name : #'EventoSemanal class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #EventoSemanal,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T20:57:39.009904-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Evento',				#traitCompositionSource : '{}',				#definitionSource : 'Evento subclass: #EventoSemanal\r\tinstanceVariableNames: \'semanas\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #EventoSemanal,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #EventoSemanal,						#isMetaSide : false					},					#name : #semanas,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'EventoSemanal class\r\tinstanceVariableNames: \'\''				},				#name : #'EventoSemanal class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #EventoSemanal,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accesing	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T20:58:00.579835-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EventoSemanal,				#isMetaSide : false			},			#name : #'setSemanas:',			#protocol : #accesing,			#sourceCode : 'setSemanas: cantidadSemanas\r\tsemanas := cantidadSemanas.',			#stamp : 'andre 9/25/2018 20:58',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T20:58:53.455819-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EventoSemanal,				#isMetaSide : false			},			#name : #getSemanas,			#protocol : #'as yet unclassified',			#sourceCode : 'getSemanas\r\t^semanas.',			#stamp : 'andre 9/25/2018 20:58',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T20:59:08.655235-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EventoSemanal,				#isMetaSide : false			},			#name : #getSemanas,			#protocol : #'as yet unclassified',			#sourceCode : 'getSemanas\r\t^semanas.',			#stamp : 'andre 9/25/2018 20:59',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EventoSemanal,				#isMetaSide : false			},			#name : #getSemanas,			#protocol : #accesing,			#sourceCode : 'getSemanas\r\t^semanas.',			#stamp : 'andre 9/25/2018 20:59',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T20:59:08.658868-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EventoSemanal,				#isMetaSide : false			},			#name : #getSemanas,			#protocol : #accesing,			#sourceCode : 'getSemanas\r\t^semanas.',			#stamp : 'andre 9/25/2018 20:58',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EventoSemanal,				#isMetaSide : false			},			#name : #getSemanas,			#protocol : #accesing,			#sourceCode : 'getSemanas\r\t^semanas.',			#stamp : 'andre 9/25/2018 20:59',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T20:59:49.834743-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'EventoSemanal class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\tnuevoEvento setNombre: unNombre .\r\tnuevoEvento setInvitados: losInvitados.\r\tnuevoEvento setAnio: unAnio.\r\tnuevoEvento setMes: unMes.\r\tnuevoEvento setDia: unDia.\r\tnuevoEvento setHora: unaHora.\t\r\t\r\t^nuevoEvento.\r',			#stamp : 'andre 9/25/2018 20:59',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T20:59:49.887077-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'EventoSemanal class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\tnuevoEvento setNombre: unNombre .\r\tnuevoEvento setInvitados: losInvitados.\r\tnuevoEvento setAnio: unAnio.\r\tnuevoEvento setMes: unMes.\r\tnuevoEvento setDia: unDia.\r\tnuevoEvento setHora: unaHora.\t\r\t\r\t^nuevoEvento.\r',			#stamp : 'andre 9/25/2018 20:59',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'EventoSemanal class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #initialize,			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\tnuevoEvento setNombre: unNombre .\r\tnuevoEvento setInvitados: losInvitados.\r\tnuevoEvento setAnio: unAnio.\r\tnuevoEvento setMes: unMes.\r\tnuevoEvento setDia: unDia.\r\tnuevoEvento setHora: unaHora.\t\r\t\r\t^nuevoEvento.\r',			#stamp : 'andre 9/25/2018 20:59',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T21:01:44.98741-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'EventoSemanal class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conCantidadSemanas:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #initialize,			#sourceCode : 'inicializarConNombre: unNombre conCantidadSemanas: cuantasSemanas conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\tnuevoEvento setNombre: unNombre .\r\tnuevoEvento setInvitados: losInvitados.\r\tnuevoEvento setAnio: unAnio.\r\tnuevoEvento setMes: unMes.\r\tnuevoEvento setDia: unDia.\r\tnuevoEvento setHora: unaHora.\t\r\t\r\t^nuevoEvento.\r',			#stamp : 'andre 9/25/2018 21:01',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T21:02:50.171005-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'EventoSemanal class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conCantidadSemanas:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #initialize,			#sourceCode : 'inicializarConNombre: unNombre conCantidadSemanas: cuantasSemanas conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\tnuevoEvento setNombre: unNombre .\r\tnuevoEvento setInvitados: losInvitados.\r\tnuevoEvento setAnio: unAnio.\r\tnuevoEvento setMes: unMes.\r\tnuevoEvento setDia: unDia.\r\tnuevoEvento setHora: unaHora.\t\r\t\r\t^nuevoEvento.\r',			#stamp : 'andre 9/25/2018 21:01',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'EventoSemanal class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conCantidadSemanas:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #initialize,			#sourceCode : 'inicializarConNombre: unNombre conCantidadSemanas: cuantasSemanas conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\r\t| nuevoEvento |\r\tnuevoEvento := EventoSemanal new.\r\t\r\tnuevoEvento setNombre: unNombre.\r\tnuevoEvento setSemanas: cuantasSemanas.\r\tnuevoEvento setInvitados: losInvitados.\r\tnuevoEvento setAnio: unAnio.\r\tnuevoEvento setMes: unMes.\r\tnuevoEvento setDia: unDia.\r\tnuevoEvento setHora: unaHora.\t\r\t\r\t^nuevoEvento.\r',			#stamp : 'andre 9/25/2018 21:02',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T21:03:05.890377-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'EventoSemanal class',				#isMetaSide : true			},			#name : #'inicializarConNombre:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #initialize,			#sourceCode : 'inicializarConNombre: unNombre conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\t\r\t| nuevoEvento |\r\tnuevoEvento := Evento new.\r\t\r\tnuevoEvento setNombre: unNombre .\r\tnuevoEvento setInvitados: losInvitados.\r\tnuevoEvento setAnio: unAnio.\r\tnuevoEvento setMes: unMes.\r\tnuevoEvento setDia: unDia.\r\tnuevoEvento setHora: unaHora.\t\r\t\r\t^nuevoEvento.\r',			#stamp : 'andre 9/25/2018 20:59',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T21:03:48.664111-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Evento\r\tinstanceVariableNames: \'anio dia hora invitados mes nombre\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Evento,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #anio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #dia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #hora,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #invitados,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #mes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Evento,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Evento class\r\tinstanceVariableNames: \'\''				},				#name : #'Evento class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Evento,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tanio:\t\t<Object>\r\tdia:\t\t<Object>\r\thora:\t\t<Object>\r\tinvitados:\t\t<Object>\r\tmes:\t\t<Object>\r\tnombre:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tanio:\t\t<Object>\r\tdia:\t\t<Object>\r\thora:\t\t<Object>\r\tinvitados:\t\t<Object>\r\tmes:\t\t<Object>\r\tnombre:\t\t<Object>\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T21:03:59.513128-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Evento',				#traitCompositionSource : '{}',				#definitionSource : 'Evento subclass: #EventoSemanal\r\tinstanceVariableNames: \'semanas\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #EventoSemanal,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #EventoSemanal,						#isMetaSide : false					},					#name : #semanas,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'EventoSemanal class\r\tinstanceVariableNames: \'\''				},				#name : #'EventoSemanal class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #EventoSemanal,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tsemanas:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tsemanas:\t\t<Object>\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T21:04:01.475046-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Calendario\r\tinstanceVariableNames: \'personas eventos\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Calendario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Calendario,						#isMetaSide : false					},					#name : #personas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Calendario,						#isMetaSide : false					},					#name : #eventos,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Calendario class\r\tinstanceVariableNames: \'\''				},				#name : #'Calendario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Calendario,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\teventos:\t\t<Object>\r\tpersonas:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\teventos:\t\t<Object>\r\tpersonas:\t\t<Object>\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T21:05:09.500544-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoSemanalConNombre:semanas:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoSemanalConNombre: nombre semanas: cuantasSemanas invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora.',			#stamp : 'andre 9/25/2018 21:05',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:31:19.924323-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10).',			#stamp : 'TomasBustamante 9/16/2019 19:51',			#package : #TP1-TestsCatedra		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    "self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10)."\r\r    " desocupado la cuarta semana "\r   " self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10)."',			#stamp : 'andre 9/25/2018 23:31',			#package : #TP1-TestsCatedra		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:33:36.908405-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    "self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10)."\r\r    " desocupado la cuarta semana "\r   " self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10)."',			#stamp : 'andre 9/25/2018 23:31',			#package : #TP1-TestsCatedra		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10).',			#stamp : 'andre 9/25/2018 23:33',			#package : #TP1-TestsCatedra		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:35:23.715976-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoSemanalConNombre:semanas:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoSemanalConNombre: nombre semanas: cuantasSemanas invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora.',			#stamp : 'andre 9/25/2018 21:05',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoSemanalConNombre:semanas:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoSemanalConNombre: nombre semanas: cuantasSemanas invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: nombre  conCantidadSemanas:cuantasSemanas conInvitados: invitados  enAnio: unAnio  enMes: unMes  enDia: unDia  yEnHora: unaHora. \r\t\r\teventos add: nuevoEvento.\r\t',			#stamp : 'andre 9/25/2018 23:35',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:38:18.588747-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoSemanalConNombre:semanas:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoSemanalConNombre: nombre semanas: cuantasSemanas invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: nombre  conCantidadSemanas:cuantasSemanas conInvitados: invitados  enAnio: unAnio  enMes: unMes  enDia: unDia  yEnHora: unaHora. \r\t\r\teventos add: nuevoEvento.\r\t',			#stamp : 'andre 9/25/2018 23:35',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoSemanalConNombre:semanas:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoSemanalConNombre: nombre semanas: cuantasSemanas invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: nombre  conCantidadSemanas: cuantasSemanas conInvitados: invitados  enAnio: unAnio  enMes: unMes  enDia: unDia  yEnHora: unaHora. \r\t\r\teventos add: nuevoEvento.\r\t',			#stamp : 'andre 9/25/2018 23:38',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:40:03.011808-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'inicializarConNombre:conCantidadSemanas:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #accessing,			#sourceCode : 'inicializarConNombre: unNombre conCantidadSemanas: cuantasSemanas conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: unNombre  conCantidadSemanas: cuantasSemanas conInvitados: losInvitados  enAnio: unAnio  enMes: unMes  enDia: unDia  yEnHora: unaHora. \r\t\r\teventos add: nuevoEvento.\r\t',			#stamp : 'andre 9/25/2018 23:40',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:42:25.808552-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'inicializarConNombre:conCantidadSemanas:conInvitados:enAnio:enMes:enDia:yEnHora:',			#protocol : #accessing,			#sourceCode : 'inicializarConNombre: unNombre conCantidadSemanas: cuantasSemanas conInvitados: losInvitados enAnio: unAnio enMes: unMes enDia: unDia yEnHora: unaHora\r\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: unNombre  conCantidadSemanas: cuantasSemanas conInvitados: losInvitados  enAnio: unAnio  enMes: unMes  enDia: unDia  yEnHora: unaHora. \r\t\r\teventos add: nuevoEvento.\r\t',			#stamp : 'andre 9/25/2018 23:40',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:45:50.429455-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoSemanalConNombre:semanas:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoSemanalConNombre: nombre semanas: cuantasSemanas invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| nuevoEvento |\r\t\r\tnuevoEvento := Evento inicializarConNombre: nombre  conCantidadSemanas: cuantasSemanas conInvitados: invitados  enAnio: unAnio  enMes: unMes  enDia: unDia  yEnHora: unaHora. \r\t\r\teventos add: nuevoEvento.\r\t',			#stamp : 'andre 9/25/2018 23:38',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarEventoSemanalConNombre:semanas:invitados:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'agregarEventoSemanalConNombre: nombre semanas: cuantasSemanas invitados: invitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| nuevoEvento |\r\t\r\tnuevoEvento := EventoSemanal inicializarConNombre: nombre  conCantidadSemanas: cuantasSemanas conInvitados: invitados  enAnio: unAnio  enMes: unMes  enDia: unDia  yEnHora: unaHora. \r\t\r\teventos add: nuevoEvento.\r\t',			#stamp : 'andre 9/25/2018 23:45',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:46:35.31025-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10).',			#stamp : 'andre 9/25/2018 23:33',			#package : #TP1-TestsCatedra		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r   " self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10)."\r\r    " desocupado la cuarta semana "\r    "self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10)."',			#stamp : 'andre 9/25/2018 23:46',			#package : #TP1-TestsCatedra		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:46:55.335395-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r   " self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10)."\r\r    " desocupado la cuarta semana "\r    "self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10)."',			#stamp : 'andre 9/25/2018 23:46',			#package : #TP1-TestsCatedra		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r   " self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10)."\r\r    " desocupado la cuarta semana "\r    "self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10)."',			#stamp : 'andre 9/25/2018 23:46',			#package : #TP1-TestsCatedra		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:47:25.8439-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r   " self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10)."\r\r    " desocupado la cuarta semana "\r    "self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10)."',			#stamp : 'andre 9/25/2018 23:46',			#package : #TP1-TestsCatedra		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10).',			#stamp : 'andre 9/25/2018 23:47',			#package : #TP1-TestsCatedra		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-25T23:48:13.724063-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10).',			#stamp : 'andre 9/25/2018 23:47',			#package : #TP1-TestsCatedra		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') "coleccion de un string"\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10).',			#stamp : 'andre 9/25/2018 23:48',			#package : #TP1-TestsCatedra		}	}}
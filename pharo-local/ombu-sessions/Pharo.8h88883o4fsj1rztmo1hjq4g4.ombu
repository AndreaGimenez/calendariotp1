OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:25.951277-03:00' ],		#prior : OmReference [ 'Pharo.4rlczyyrpt7184v7lhmvvr4ow', '11' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #TP1-Tests,		#affectedPackageName : #TP1	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.013862-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #PruebasCalendario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1-Tests\''			},			#name : #PruebasCalendario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PruebasCalendario class\r\tinstanceVariableNames: \'\''				},				#name : #'PruebasCalendario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PruebasCalendario,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1-Tests,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.020555-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test02AgregarEventoSimple,			#protocol : #test,			#sourceCode : 'test02AgregarEventoSimple\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r\t                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 11).',			#stamp : 'TomasBustamante 9/16/2018 20:20',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.023777-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test01AgregarPersonas,			#protocol : #test,			#sourceCode : 'test01AgregarPersonas\r\r    | calendario |\r\t\r    calendario := Calendario new.\r\t\r    self deny: (calendario existePersona: \'Juan\').\r\t\r    calendario agregarPersona: \'Juan\'.\r\t\r    self assert: (calendario existePersona: \'Juan\').\r    self deny: (calendario existePersona: \'Pedro\').',			#stamp : 'TomasBustamante 9/16/2019 19:46',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.026767-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test07PersonaAdmiteSuperposicion,			#protocol : #test,			#sourceCode : 'test07PersonaAdmiteSuperposicion\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoConNombre: \'Visitar oculista\'\r               invitados: \t#(\'Pedro\')\r\t             enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\r    calendario agregarEventoConNombre: \'Leer Las Venas abiertas de America Latina\'\r               invitados: #(\'Pedro\')\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).',			#stamp : 'TomasBustamante 9/16/2019 19:55',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.032478-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test08RecursoNoAdmiteSuperposicion,			#protocol : #test,			#sourceCode : 'test08RecursoNoAdmiteSuperposicion\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'; add: \'Cama\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarRecurso: \'Cama\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 2\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Cama\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r\r    self should: [\r\t      calendario agregarEventoConNombre: \'Gran siesta\'\r\t                 invitados: invitados\r\t                 enAnio: 2019 mes: 5 dia: 11 hora: 10 \r    ] raise: RecursoOcupadoError.',			#stamp : 'TomasBustamante 9/16/2019 19:56',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.03618-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test09RemoverEvento,			#protocol : #test,			#sourceCode : 'test09RemoverEvento\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoConNombre: \'Siesta\'\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    \r    calendario removerEvento: \'Siesta\'.\r\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 10).\r\t\r    calendario agregarEventoSemanalConNombre: \'Gran Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 10 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 10 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 10 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 10 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 25 hora: 10).\r\r    calendario removerEvento: \'Gran Siesta\'.\r\r    " desocupado las cuatro semanas "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 11 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 18 hora: 10).\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 10 dia: 25 hora: 10).\r',			#stamp : 'TomasBustamante 9/16/2019 20:11',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.038899-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test06AgregarEventoConRecurso,			#protocol : #test,			#sourceCode : 'test06AgregarEventoConRecurso\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarPersona: \'Pablo\'.\r    calendario agregarRecurso: \'Parrilla\'.\r\r    calendario agregarEventoConNombre: \'Asado vegano\'\r               invitados: #(\'Pedro\' \'Pablo\' \'Parrilla\')\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\t\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia:4  hora: 10).\r    self assert: (calendario estaOcupado: \'Pablo\'\r                             enAnio: 2019 mes: 5 dia:4  hora: 10).\r    self assert: (calendario estaOcupado: \'Parrilla\'\r                             enAnio: 2019 mes: 5 dia:4  hora: 10).',			#stamp : 'TomasBustamante 9/16/2018 20:20',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.041733-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test05AgregarRecursos,			#protocol : #test,			#sourceCode : 'test05AgregarRecursos\r\r    | calendario |\r\t\r    calendario := Calendario new.\r\t\r    self deny: (calendario existePersona: \'Pedro\').\r    self deny: (calendario existeRecurso: \'Proyector\').\r\t\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarRecurso: \'Proyector\'.\r\t\r    self assert: (calendario existeRecurso: \'Proyector\').',			#stamp : 'TomasBustamante 9/16/2019 19:52',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.046059-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test03AgregarEventoSemanal,			#protocol : #test,			#sourceCode : 'test03AgregarEventoSemanal\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 3\r               invitados: #(\'Pedro\') " coleccion de un string "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    " ocupado por 3 semanas "\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 18 hora: 10).\r\r    " desocupado la cuarta semana "\r    self deny: (calendario estaOcupado: \'Pedro\'\r                           enAnio: 2019 mes: 5 dia: 25 hora: 10).',			#stamp : 'TomasBustamante 9/16/2019 19:51',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:10:26.048982-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test04AgregarEventoSimpleConVariosInvitados,			#protocol : #test,			#sourceCode : 'test04AgregarEventoSimpleConVariosInvitados\r\r    | calendario |\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarPersona: \'Pablo\'.\r    calendario agregarPersona: \'Maria\'.\r\r    calendario agregarEventoConNombre: \'Partida de ajedrez\'\r               invitados: #(\'Pedro\' \'Pablo\') " Coleccion de strings "\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Pedro\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self assert: (calendario estaOcupado: \'Pablo\'\r                             enAnio: 2019 mes: 5 dia: 4 hora: 10).\r    self deny: (calendario estaOcupado: \'Maria\'\r                           enAnio: 2019 mes: 5 dia: 4 hora: 10).',			#stamp : 'TomasBustamante 9/16/2018 20:20',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:14:53.040297-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpCategoryAddition {		#classCategoryName : #TP1-Test,		#affectedPackageName : #TP1-Test	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-23T15:14:53.091191-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #CalendarioTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1-Test\''			},			#name : #CalendarioTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CalendarioTest class\r\tinstanceVariableNames: \'\''				},				#name : #'CalendarioTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CalendarioTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1-Test,			#package : #TP1-Test,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Andre',		#time : DateAndTime [ '2018-09-23T15:15:24.667471-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01,			#protocol : #'as yet unclassified',			#sourceCode : 'test01',			#stamp : 'Andre 9/23/2018 15:15',			#package : #TP1-Test		}	}}OmEntry {	#tags : {		#author : 'Andre',		#time : DateAndTime [ '2018-09-23T15:15:24.728726-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01,			#protocol : #'as yet unclassified',			#sourceCode : 'test01',			#stamp : 'Andre 9/23/2018 15:15',			#package : #TP1-Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01,			#protocol : #tests,			#sourceCode : 'test01',			#stamp : 'Andre 9/23/2018 15:15',			#package : #TP1-Test		}	}}OmEntry {	#tags : {		#author : 'Andre',		#time : DateAndTime [ '2018-09-23T15:20:32.059812-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01ExisteJuanDeberiaSerFalsoCuandoCreoElCalendario,			#protocol : #tests,			#sourceCode : 'test01ExisteJuanDeberiaSerFalsoCuandoCreoElCalendario\r"Arrange"\r| calendario |\r\rcalendario := Calendario new.\r\r"Act"\r\r"Assert"\rself deny: (calendario existePersona: \'Juan\').\r',			#stamp : 'Andre 9/23/2018 15:19',			#package : #TP1-Test		}	}}OmEntry {	#tags : {		#author : 'Andre',		#time : DateAndTime [ '2018-09-23T15:20:41.659723-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test01,			#protocol : #tests,			#sourceCode : 'test01',			#stamp : 'Andre 9/23/2018 15:15',			#package : #TP1-Test		}	}}OmEntry {	#tags : {		#author : 'Andre',		#time : DateAndTime [ '2018-09-23T15:24:14.76634-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpCategoryAddition {		#classCategoryName : #TP1,		#affectedPackageName : #TP1	}}OmEntry {	#tags : {		#author : 'Andre',		#time : DateAndTime [ '2018-09-23T15:24:14.805309-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Calendario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TP1\''			},			#name : #Calendario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Calendario class\r\tinstanceVariableNames: \'\''				},				#name : #'Calendario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Calendario,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TP1,			#package : #TP1,			#sharedPools : OrderedCollection [ ]		}	}}
OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T13:52:45.266893-03:00' ],		#prior : OmReference [ 'Pharo.9xy4ca5fdd0ry16tspvl54lf', '80' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #getRecurso,			#protocol : #accessing,			#sourceCode : 'getRecurso\r^recursos.',			#stamp : 'andre 9/28/2018 13:52',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T13:54:16.685247-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\t\r\tcalendario agregarRecurso: nuevoRecurso.\r\t\r\tself assert: (calendario existeRecurso: \'Proyector\').\r\r',			#stamp : 'andre 9/27/2018 17:55',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso listaRec|\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\tlistaRec := calendario getRecurso.\r\tself assert:(listaRec isEmpty).\r\tcalendario agregarRecurso: nuevoRecurso.\r\tself deny: (listaRec isEmpty).\r\t"self assert: (calendario existeRecurso: \'Proyector\')."\r\r',			#stamp : 'andre 9/28/2018 13:54',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T13:56:32.217087-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #existeRecurso,			#protocol : #accessing,			#sourceCode : 'existeRecurso "nombreRecurso"\r\t| recursoPertenece |\r\t\r\trecursoPertenece := recursos includes: \'Proyector\'.\r\t\r\t^recursoPertenece.',			#stamp : 'andre 9/28/2018 13:56',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T13:59:59.8427-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t| recursoPertenece |\r\t\r\trecursoPertenece := recursos includes: nombreRecurso.\r\t\r\t^recursoPertenece.',			#stamp : 'andre 9/27/2018 17:36',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t| recursoPertenece |\r\t\r\t^recursos includes: nombreRecurso.\r\t\r\t',			#stamp : 'andre 9/28/2018 13:59',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:00:57.330748-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #existeRecurso,			#protocol : #accessing,			#sourceCode : 'existeRecurso "nombreRecurso"\r\t| recursoPertenece |\r\t\r\trecursoPertenece := recursos includes: \'Proyector\'.\r\t\r\t^recursoPertenece.',			#stamp : 'andre 9/28/2018 13:56',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:01:02.710544-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t| recursoPertenece |\r\t\r\t^recursos includes: nombreRecurso.\r\t\r\t',			#stamp : 'andre 9/28/2018 13:59',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:01:45.155188-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso listaRec|\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\tlistaRec := calendario getRecurso.\r\tself assert:(listaRec isEmpty).\r\tcalendario agregarRecurso: nuevoRecurso.\r\tself deny: (listaRec isEmpty).\r\t"self assert: (calendario existeRecurso: \'Proyector\')."\r\r',			#stamp : 'andre 9/28/2018 13:54',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\tcalendario agregarRecurso: nuevoRecurso.\r\tself assert: (calendario existeRecurso: \'Proyector\').\r\r',			#stamp : 'andre 9/28/2018 14:01',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:02:06.983568-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #getRecurso,			#protocol : #accessing,			#sourceCode : 'getRecurso\r^recursos.',			#stamp : 'andre 9/28/2018 13:52',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:04:15.592018-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\texiste := recursos includes: nombreRecurso.\r\t^existe.',			#stamp : 'andre 9/28/2018 14:04',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:05:22.625463-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\tcalendario agregarRecurso: nuevoRecurso.\r\tself assert: (calendario existeRecurso: \'Proyector\').\r\r',			#stamp : 'andre 9/28/2018 14:05',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\tcalendario agregarRecurso: nuevoRecurso.\r\tself assert: (calendario existeRecurso: nuevoRecurso).\r\r',			#stamp : 'andre 9/28/2018 14:05',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:05:41.759074-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test10CalendarioDeberiaContenerRecursoProyectorLuegoDeCrearloYAgregarlo,			#protocol : #tests,			#sourceCode : 'test10CalendarioDeberiaContenerRecursoProyectorLuegoDeCrearloYAgregarlo\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\t\r\tself assert: (calendario existeRecurso: \'Proyector\').\r',			#stamp : 'andre 9/27/2018 17:53',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test10CalendarioDeberiaContenerRecursoProyectorLuegoDeCrearloYAgregarlo,			#protocol : #tests,			#sourceCode : 'test10CalendarioDeberiaContenerRecursoProyectorLuegoDeCrearloYAgregarlo\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\t\r\tself assert: (calendario existeRecurso: nuevoRecurso).\r',			#stamp : 'andre 9/28/2018 14:05',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:06:42.131023-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test10CalendarioDeberiaContenerRecursoProyectorLuegoDeCrearloYAgregarlo,			#protocol : #tests,			#sourceCode : 'test10CalendarioDeberiaContenerRecursoProyectorLuegoDeCrearloYAgregarlo\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\t\r\tself assert: (calendario existeRecurso: nuevoRecurso).\r',			#stamp : 'andre 9/28/2018 14:05',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T14:07:13.363194-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\tcalendario agregarRecurso: nuevoRecurso.\r\tself assert: (calendario existeRecurso: nuevoRecurso).\r\r',			#stamp : 'andre 9/28/2018 14:05',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\t\r\tcalendario agregarRecurso: nuevoRecurso.\r\t\r\tself assert: (calendario existeRecurso: nuevoRecurso).\r\r',			#stamp : 'andre 9/28/2018 14:07',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:16:03.931232-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test08RecursoNoAdmiteSuperposicion,			#protocol : #test,			#sourceCode : 'test08RecursoNoAdmiteSuperposicion\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'; add: \'Cama\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarRecurso: \'Cama\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 2\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Cama\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r\r    self should: [\r\t      calendario agregarEventoConNombre: \'Gran siesta\'\r\t                 invitados: invitados\r\t                 enAnio: 2019 mes: 5 dia: 11 hora: 10 \r    ] raise: RecursoOcupadoError.',			#stamp : 'TomasBustamante 9/16/2019 19:56',			#package : #TP1-TestsCatedra		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test08RecursoNoAdmiteSuperposicion,			#protocol : #test,			#sourceCode : 'test08RecursoNoAdmiteSuperposicion\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'; add: \'Cama\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarRecurso: \'Cama\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 2\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Cama\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r\r    "self should: [\r\t      calendario agregarEventoConNombre: \'Gran siesta\'\r\t                 invitados: invitados\r\t                 enAnio: 2019 mes: 5 dia: 11 hora: 10 \r    ] raise: RecursoOcupadoError."',			#stamp : 'andre 9/28/2018 16:16',			#package : #TP1-TestsCatedra		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:20:28.010903-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: \'Proyector\'.\r\t\r\tcalendario agregarRecurso: nuevoRecurso.\r\t\r\tself assert: (calendario existeRecurso: nuevoRecurso).\r\r',			#stamp : 'andre 9/28/2018 14:07',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tcalendario agregarRecurso: nuevoRecurso.\r\t\r\tself assert: (calendario existeRecurso: nuevoRecurso).\r\r',			#stamp : 'andre 9/28/2018 16:20',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:21:55.188245-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarRecurso:',			#protocol : #accessing,			#sourceCode : 'agregarRecurso: nuevoRecurso\r\r\trecursos add: nuevoRecurso.',			#stamp : 'andre 9/27/2018 17:59',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'agregarRecurso:',			#protocol : #accessing,			#sourceCode : 'agregarRecurso: nombreRecurso\r\t| nuevoRecurso |\r\t\r\tnuevoRecurso := Recurso inicializarConNombre: nombreRecurso.\r\trecursos add: nuevoRecurso.',			#stamp : 'andre 9/28/2018 16:21',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:22:46.430261-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tcalendario agregarRecurso: nuevoRecurso.\r\t\r\tself assert: (calendario existeRecurso: nuevoRecurso).\r\r',			#stamp : 'andre 9/28/2018 16:20',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tcalendario agregarRecurso: \'Proyecto\'.\r\t\r\tself assert: (calendario existeRecurso: \'Proyecto\').\r\r',			#stamp : 'andre 9/28/2018 16:22',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:22:54.57815-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario nuevoRecurso |\r\t\r\tcalendario := Calendario new.\r\t\r\tcalendario agregarRecurso: \'Proyecto\'.\r\t\r\tself assert: (calendario existeRecurso: \'Proyecto\').\r\r',			#stamp : 'andre 9/28/2018 16:22',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario |\r\t\r\tcalendario := Calendario new.\r\t\r\tcalendario agregarRecurso: \'Proyecto\'.\r\t\r\tself assert: (calendario existeRecurso: \'Proyecto\').\r\r',			#stamp : 'andre 9/28/2018 16:22',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:23:42.028639-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\texiste := recursos includes: nombreRecurso.\r\t^existe.',			#stamp : 'andre 9/28/2018 14:04',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos includes: nombreRecurso.\r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:23',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:24:18.848393-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario |\r\t\r\tcalendario := Calendario new.\r\t\r\tcalendario agregarRecurso: \'Proyecto\'.\r\t\r\tself assert: (calendario existeRecurso: \'Proyecto\').\r\r',			#stamp : 'andre 9/28/2018 16:22',			#package : #TP1-Tests		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CalendarioTest,				#isMetaSide : false			},			#name : #test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario,			#protocol : #tests,			#sourceCode : 'test13SeCreaUnRecursoProyectorYSeLoAgregaAlCalendarioRecursoProyectorDeberiaExistirEnCalendario\r\r\t| calendario |\r\t\r\tcalendario := Calendario new.\r\t\r\tcalendario agregarRecurso: \'Proyector\'.\r\t\r\tself assert: (calendario existeRecurso: \'Proyector\').\r\r',			#stamp : 'andre 9/28/2018 16:24',			#package : #TP1-Tests		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:28:38.979665-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos includes: nombreRecurso.\r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:23',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos anySatisfy: [ :recurso | recurso getNombre = nombreRecurso ]. \r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:28',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:28:49.35923-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos anySatisfy: [ :recurso | recurso getNombre = nombreRecurso ]. \r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:28',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos anySatisfy: [ :recurso | (recurso getNombre) = nombreRecurso ]. \r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:28',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:30:02.935063-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos anySatisfy: [ :recurso | (recurso getNombre) = nombreRecurso ]. \r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:28',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos include: nombreRecurso .\r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:30',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:30:29.468991-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos include: nombreRecurso .\r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:30',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos includes: nombreRecurso .\r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:30',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:30:56.266309-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos includes: nombreRecurso .\r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:30',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'existeRecurso:',			#protocol : #accessing,			#sourceCode : 'existeRecurso: nombreRecurso\r\t\r\t| existe |\r\t\r\texiste := recursos anySatisfy: [ :recurso | (recurso getNombre) = nombreRecurso ].\r\t\r\t^existe.',			#stamp : 'andre 9/28/2018 16:30',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-28T16:31:42.172498-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test08RecursoNoAdmiteSuperposicion,			#protocol : #test,			#sourceCode : 'test08RecursoNoAdmiteSuperposicion\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'; add: \'Cama\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarRecurso: \'Cama\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 2\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Cama\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r\r    "self should: [\r\t      calendario agregarEventoConNombre: \'Gran siesta\'\r\t                 invitados: invitados\r\t                 enAnio: 2019 mes: 5 dia: 11 hora: 10 \r    ] raise: RecursoOcupadoError."',			#stamp : 'andre 9/28/2018 16:16',			#package : #TP1-TestsCatedra		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PruebasCalendario,				#isMetaSide : false			},			#name : #test08RecursoNoAdmiteSuperposicion,			#protocol : #test,			#sourceCode : 'test08RecursoNoAdmiteSuperposicion\r\r    | calendario invitados |\r\r    invitados := OrderedCollection new.\r    invitados add: \'Pedro\'; add: \'Cama\'.\r\r    calendario := Calendario new.\r    calendario agregarPersona: \'Pedro\'.\r    calendario agregarRecurso: \'Cama\'.\r\r    calendario agregarEventoSemanalConNombre: \'Siesta\'\r               semanas: 2\r               invitados: invitados\r               enAnio: 2019 mes: 5 dia: 4 hora: 10.\r\r    self assert: (calendario estaOcupado: \'Cama\'\r                             enAnio: 2019 mes: 5 dia: 11 hora: 10).\r\r    self should: [\r\t      calendario agregarEventoConNombre: \'Gran siesta\'\r\t                 invitados: invitados\r\t                 enAnio: 2019 mes: 5 dia: 11 hora: 10 \r    ] raise: RecursoOcupadoError.',			#stamp : 'andre 9/28/2018 16:31',			#package : #TP1-TestsCatedra		}	}}
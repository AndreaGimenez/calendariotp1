OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T10:57:03.79742-03:00' ],		#prior : OmReference [ 'Pharo.9pf6ldxg884tzfnzla8p73r1s', '26' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #estaOcupado,			#protocol : #accesing,			#sourceCode : 'estaOcupado',			#stamp : 'andre 9/26/2018 10:57',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T10:57:52.019252-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: unNombre | en |\ren',			#stamp : 'andre 9/26/2018 10:57',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T10:58:09.759589-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #estaOcupado,			#protocol : #accesing,			#sourceCode : 'estaOcupado',			#stamp : 'andre 9/26/2018 10:57',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T10:58:18.31717-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora',			#stamp : 'andre 9/26/2018 10:58',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T10:58:22.486153-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: unNombre | en |\ren',			#stamp : 'andre 9/26/2018 10:57',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T10:59:05.347544-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora',			#stamp : 'andre 9/26/2018 10:58',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| pertenece eventos |\r\t\r   pertenece := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^pertenece.',			#stamp : 'andre 9/26/2018 10:59',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:00:06.333102-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| pertenece eventos |\r\t\r   pertenece := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^pertenece.',			#stamp : 'andre 9/26/2018 10:59',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| pertenece eventos |\r\t\r\t\r   pertenece := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^pertenece.',			#stamp : 'andre 9/26/2018 11:00',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:00:07.776121-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| pertenece eventos |\r\t\r\t\r   pertenece := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^pertenece.',			#stamp : 'andre 9/26/2018 11:00',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:01:27.737771-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t| pertenece |\r\t\r   pertenece := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^pertenece.',			#stamp : 'andre 9/25/2018 20:22',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t| ocupado |\r\t\r\t\r\t" \r   pertenece := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^pertenece."',			#stamp : 'andre 9/26/2018 11:01',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:03:01.587639-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t| ocupado |\r\t\r\t\r\t" \r   pertenece := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^pertenece."',			#stamp : 'andre 9/26/2018 11:01',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t| ocupado |\r\t\r   ocupado := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^ocupado.',			#stamp : 'andre 9/26/2018 11:03',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:05:13.91054-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t| ocupado |\r\t\r   ocupado := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].\r \t\r\t^ocupado.',			#stamp : 'andre 9/26/2018 11:03',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Calendario,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accessing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\t| ocupado |\r\t\r   ocupado := eventos anySatisfy: [ :evento | evento estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora].\r\t\t\t\t\t\r \t\r\t^ocupado.\r\t\r"   ocupado := eventos anySatisfy: [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t]."',			#stamp : 'andre 9/26/2018 11:05',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:06:22.399085-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: unaPersona',			#stamp : 'andre 9/26/2018 11:06',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:07:01.343961-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora',			#stamp : 'andre 9/26/2018 11:07',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:07:05.918353-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: unaPersona',			#stamp : 'andre 9/26/2018 11:06',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:10:54.328445-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora',			#stamp : 'andre 9/26/2018 11:07',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| eventos ocupado |\r\tocupado := eventos anySatisfy:   [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].',			#stamp : 'andre 9/26/2018 11:10',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:23:24.501461-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| eventos ocupado |\r\tocupado := eventos anySatisfy:   [ :evento | ( ( ( ( ( evento getInvitados ) includes: nombrePersona ) and: \r                                    [ ( evento getAnio ) = unAnio ] ) and: \r                                    [ ( evento getMes ) = unMes ] ) and: \r                                    [ ( evento getDia ) = unDia ] ) and: \r                                    [ ( evento getHora ) = unaHora ] \r\t\t\t\t\t].',			#stamp : 'andre 9/26/2018 11:10',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| eventos ocupado |\r\tocupado := eventos anySatisfy:  [ ( ( self getInvitados )includes: nombrePersona ) and: \r                                     ( ( self getAnio ) = unAnio  ) and: \r                                     ( ( self getMes ) = unMes  ) and: \r                                     ( ( self getDia ) = unDia  ) and: \r                                     ( ( self getHora ) = unaHora )] .\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:23',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:25:54.690084-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| eventos ocupado |\r\tocupado := eventos anySatisfy:  [ ( ( self getInvitados )includes: nombrePersona ) and: \r                                     ( ( self getAnio ) = unAnio  ) and: \r                                     ( ( self getMes ) = unMes  ) and: \r                                     ( ( self getDia ) = unDia  ) and: \r                                     ( ( self getHora ) = unaHora )] .\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:23',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| eventos ocupado |\r\tocupado := eventos anySatisfy:  [   \t( ( self getInvitados ) includes: nombrePersona ) and: \r                                      [ ( ( self getAnio ) = unAnio ) ] and: \r                                      [ ( ( self getMes ) = unMes ) ] and: \r                                      [ ( ( self getDia ) = unDia ) ] and: \r                                      [ ( ( self getHora ) = unaHora ) ]\r\t\t                             ] .\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:25',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:26:32.636725-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| eventos ocupado |\r\tocupado := eventos anySatisfy:  [   \t( ( self getInvitados ) includes: nombrePersona ) and: \r                                      [ ( ( self getAnio ) = unAnio ) ] and: \r                                      [ ( ( self getMes ) = unMes ) ] and: \r                                      [ ( ( self getDia ) = unDia ) ] and: \r                                      [ ( ( self getHora ) = unaHora ) ]\r\t\t                             ] .\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:25',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| ocupado |\r\t\r\tocupado :=   [   \t( ( self getInvitados ) includes: nombrePersona ) and: \r                                      [ ( ( self getAnio ) = unAnio ) ] and: \r                                      [ ( ( self getMes ) = unMes ) ] and: \r                                      [ ( ( self getDia ) = unDia ) ] and: \r                                      [ ( ( self getHora ) = unaHora ) ]\r\t\t                             ] .\r\t\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:26',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:26:49.974096-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| ocupado |\r\t\r\tocupado :=   [   \t( ( self getInvitados ) includes: nombrePersona ) and: \r                                      [ ( ( self getAnio ) = unAnio ) ] and: \r                                      [ ( ( self getMes ) = unMes ) ] and: \r                                      [ ( ( self getDia ) = unDia ) ] and: \r                                      [ ( ( self getHora ) = unaHora ) ]\r\t\t                             ] .\r\t\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:26',			#package : #TP1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| ocupado |\r\t\r\tocupado :=   [   \t( ( self getInvitados ) includes: nombrePersona ) and: \r                                      [ ( ( self getAnio ) = unAnio ) ] and: \r                                      [ ( ( self getMes ) = unMes ) ] and: \r                                      [ ( ( self getDia ) = unDia ) ] and: \r                                      [ ( ( self getHora ) = unaHora ) ]\r\t\t                             ] .\r\t^ocupado.\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:26',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:29:16.849078-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:hora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia hora: unaHora\r\r\t| ocupado |\r\t\r\tocupado :=   [   \t( ( self getInvitados ) includes: nombrePersona ) and: \r                                      [ ( ( self getAnio ) = unAnio ) ] and: \r                                      [ ( ( self getMes ) = unMes ) ] and: \r                                      [ ( ( self getDia ) = unDia ) ] and: \r                                      [ ( ( self getHora ) = unaHora ) ]\r\t\t                             ] .\r\t^ocupado.\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:29',			#package : #TP1		}	}}OmEntry {	#tags : {		#author : 'andre',		#time : DateAndTime [ '2018-09-26T11:29:58.888011-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Evento,				#isMetaSide : false			},			#name : #'estaOcupado:enAnio:mes:dia:enHora:',			#protocol : #accesing,			#sourceCode : 'estaOcupado: nombrePersona enAnio: unAnio mes: unMes dia: unDia enHora: unaHora\r\r\t| ocupado |\r\t\r\tocupado :=   [   \t( ( self getInvitados ) includes: nombrePersona ) and: \r                                      [ ( ( self getAnio ) = unAnio ) ] and: \r                                      [ ( ( self getMes ) = unMes ) ] and: \r                                      [ ( ( self getDia ) = unDia ) ] and: \r                                      [ ( ( self getHora ) = unaHora ) ]\r\t\t                             ] .\r\t^ocupado.\r\t\t\t\t\t',			#stamp : 'andre 9/26/2018 11:26',			#package : #TP1		}	}}